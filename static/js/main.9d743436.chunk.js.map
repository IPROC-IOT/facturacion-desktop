{"version":3,"sources":["reportWebVitals.js","helpers/decodeJWT.js","reducers/index.js","auth/AuthContext.js","routes/PublicRoute.js","routes/PrivateRoute.js","config/api.js","services/userServices.js","components/BtnDarkMode.jsx","pages/Login.jsx","actions/index.js","assets/img/logo-synho-2.jpeg","layout/Header.jsx","layout/Footer.jsx","layout/Layout.jsx","services/compras.js","pages/CompraDetail.jsx","pages/Compras.jsx","services/externalApis.js","pages/ComprasAdd.jsx","pages/Home.jsx","pages/NotFound.jsx","pages/UnidadesCompra.jsx","pages/UnidadesCompraDetail.jsx","pages/UnidadesVenta.jsx","services/ventas.js","pages/Ventas.jsx","pages/VentasAdd.jsx","routes/DashboardRoutes.js","routes/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","reducer","state","action","type","myPayload","payload","access","id","email","username","first_name","last_name","logged","user","AuthContext","createContext","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","sessionStorage","setItem","location","pathname","API_BASE_URL","LoginService","data","a","requestUrl","axios","url","method","resp","status","AllUsers","BtnDarkMode","useState","localStorage","getItem","darkMode","setDarkMode","handleMode","event","target","checked","document","body","classList","remove","add","className","defaultChecked","onChange","htmlFor","mapDispatchToProps","loginRequest","connect","dispatch","useContext","form","setValues","btnDisable","setBtnDisable","error","setError","errorLogin","setErrorLogin","updateInput","name","value","handleSubmit","preventDefault","length","password","result","statusText","refresh","history","useEffect","style","margin","borderColor","onSubmit","placeholder","required","disabled","Date","getFullYear","Header","src","Logo","height","Footer","Layout","children","ShowCompras","ShowTypeDocument","ShowTypeRecipe","ChangeDolar","CreatePucharse","SearchByDatePucharse","desde","hasta","SearchPucharse","date","UnitiesPucharse","getPurcharseDetail","getUnitiesPurchase","getUnityDetail","createUnityResponsable","unitiesResponsableFilterView","SearchByDateUnities","SearchUnities","CompraDetail","match","params","myPurchase","setMyPurchase","myUnities","setMyUnities","isLoad","setIsLoad","getPurchase","myId","console","log","result2","month","year","type_recipe","recipe","number","serie","supplier","business_name","ruc","change_type","tax_base_dolar","tb_igv_dolar","tb_total_dolar","tax_base","tb_igv","tb_total","table","filename","getDate","getMonth","sheet","buttonText","uni","code","description","typeOfUnity","title","moneda","price","purchase","responsable","available","Compras","compras","setCompras","dateStart","setDateStart","dateEnd","setDateEnd","total","setTotal","totalRegister","setTotalRegister","funcSumTotal","sumTotal","i","element","parseInt","getCompras","filterDate","d","toISOString","h","search","search_compra","v","width","getRuc","ComprasAdd","setValue","typeDoc","setTypeDoc","typeRecipe","setTypeRecipe","setRuc","razonSocial","setRazonSocial","solesDolars","setSolesDolars","totalSoles","setTotalSoles","totalDolares","setTotalDolares","valueDolar","setValueDolar","ctdIGVSoles","setCtdIGVSoles","ctdIGVDolar","setctdIGVDolar","priceTotal","setPriceTotal","priceMoment","setPriceMoment","priceCapture","setPriceCapture","priceTotalConvertido","setPriceTotalConvertido","codes","codeyear","codeMonth","codeDate","push","getTypeDocument","getTypeRecipe","getMyChangeDolar","venta","getSupplier","ur","getElementsByClassName","unities","myError","cuantity","childNodes","item","unity","parseFloat","number_recipe","monto","NaN","convertido","updateInput2","defaultValue","t","max","step","onFocus","onBlur","Home","NotFound","UnidadesCompra","setUnities","getUnities","u","UnidadesCompraDetail","setUnity","responsables","setResponsables","isOpen","setisOpen","allUsers","setAllUsers","getMyUnity","getAllUsers","openModal","closeModal","reason","onClick","r","UnidadesVenta","ShowVentas","CreateSale","SearchByDateSale","SearchSale","Ventas","ventas","setVentas","getVentas","index","VentasAdd","isNaN","min","DashboardRoutes","exact","path","createBrowserHistory","init","myUser","myToken","user_id","App","useReducer","Provider","Login","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","__PRELOADED_STATE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9d743436.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const parseJwt = token => {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload);\n}","import { parseJwt } from \"../helpers/decodeJWT\";\n\nconst reducer = (state , action) => {\n  switch (action.type) {\n    case 'LOGIN_REQUEST': \n      const myPayload = parseJwt(action.payload.access);\n      return {\n        ...state,\n        id: myPayload.id,\n        email: myPayload.email,\n        username: myPayload.username,\n        first_name: myPayload.first_name,\n        last_name: myPayload.last_name,\n        logged: true\n      }\n    case 'LOGOUT_REQUEST':\n      return {\n        ...state,\n        user: action.payload,\n        logged: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n};\n\nexport default reducer;","import { createContext } from \"react\";\n\nexport const AuthContext = createContext();","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" />)\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n\n    sessionStorage.setItem('lastPath', rest.location.pathname)\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n}","const API_BASE_URL = \"https://facturacion-synho.herokuapp.com/api\";\n// const API_BASE_URL = \"http://localhost:8000/api\";\nexport default API_BASE_URL;","import axios from \"axios\";\nimport API_BASE_URL from \"../config/api\";\n\nexport const LoginService = async (data) => {\n    const requestUrl = `${API_BASE_URL}/login/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const AllUsers = async () => {\n    const requestUrl = `${API_BASE_URL}/users/all-users/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}","import React, { useState } from 'react'\n\nconst BtnDarkMode = () => {\n\n    const [darkMode, setDarkMode] = useState(JSON.parse(localStorage.getItem(\"darkMode\")) || false)\n\n    const handleMode = async (event) => {\n        if (event.target.checked) {\n            localStorage.setItem(\"darkMode\",true)\n            setDarkMode(true)\n            document.body.classList.remove('is-light-mode')\n            document.body.classList.add('is-dark-mode')\n        }else{\n            localStorage.setItem(\"darkMode\",false)\n            setDarkMode(false)\n            document.body.classList.remove('is-dark-mode')\n            document.body.classList.add('is-light-mode')\n        }\n    }\n\n    return (\n        <div className=\"dark-mode\">\n            <p className=\"dark-mode-title\">\n                {darkMode\n                    ? \"Dark Mode\"\n                    : \"Light Mode\"\n                }\n            </p>\n            <input \n                type=\"checkbox\" \n                className=\"checkbox\" \n                id=\"checkbox\"\n                defaultChecked={darkMode}\n                onChange={handleMode}\n            />\n            <label className=\"switch\" htmlFor=\"checkbox\">\n            </label>\n        </div>\n    )\n}\n\nexport default BtnDarkMode\n","import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../auth/AuthContext';\nimport { LoginService } from '../services/userServices'\nimport { loginRequest } from \"../actions\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../assets/css/Login.css'\nimport BtnDarkMode from '../components/BtnDarkMode';\n\nconst Login = (props) => {\n\n    const {dispatch} = useContext(AuthContext)\n    const [form, setValues] = useState({});\n    const [btnDisable, setBtnDisable] = useState(false)\n    const [error, setError] = useState(false)\n    const [errorLogin, setErrorLogin] = useState(false)\n\n    const updateInput = event => {\n        setValues({\n            ...form,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (form.email.length === 0 || form.password.length === 0) {\n            setError(true)\n        } else {\n            setError(false)\n            setBtnDisable(true)\n            const result = await LoginService(form)\n            if (result.statusText === \"OK\") {\n                sessionStorage.setItem(\"crdt\",result.data.refresh)\n                const lastPath = sessionStorage.getItem('lastPath') || '/ventas' \n                dispatch(props.loginRequest(result.data));\n                props.history.replace('/ventas');\n            }else{\n                setErrorLogin(true)\n                setBtnDisable(false)\n            }   \n        }\n    }\n\n    useEffect(() => {\n        const themeColor = JSON.parse(localStorage.getItem(\"darkMode\"))\n        if (themeColor) {\n            document.body.classList.remove('is-light-mode')\n            document.body.classList.add('is-dark-mode')\n        }else{\n            document.body.classList.remove('is-dark-mode')\n            document.body.classList.add('is-light-mode')\n        }\n    }, [])\n\n    return (\n        <div className=\"container-login\">\n            <BtnDarkMode/>\n            <h1 className=\"logo-name\">SYNHO INVENTARIO</h1>\n            <div className=\"container-form-login\">\n                <h2>Iniciar la sesión</h2>\n                <hr style={{margin:\"15px 0px 35px\",borderColor:\"var(--gray)\"}}/>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Correo electrónico</label>\n                    <input \n                        type=\"text\" \n                        name=\"email\" \n                        placeholder=\"user@domain.com\" \n                        required={true}\n                        id=\"email\"\n                        onChange={updateInput}\n                    />\n                    <label htmlFor=\"password\">Contraseña</label>\n                    <input \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Introduzca su contraseña\"\n                        required={true}\n                        id=\"password\"\n                        onChange={updateInput}\n                    />\n\n                    { error && <p className=\"error\" >Completar los campos para iniciar sesión</p> }\n                    { errorLogin && <p className=\"error\" >Error al iniciar sesión, completar los campos correctamente</p> }\n\n                    <button \n                        className=\"inicia-sesion-login\" \n                        type=\"submit\"\n                        disabled={btnDisable}\n                    >\n                        Iniciar sesión\n                    </button>\n                </form>\n            </div>\n            <div className=\"copy-right\">Copyright © Synho {new Date().getFullYear()}</div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    loginRequest,\n};\n\nLogin.propTypes = {\n    loginRequest: PropTypes.func,\n};\n  \nexport default connect(null, mapDispatchToProps)(Login);","export const loginRequest = payload => ({\n    type: 'LOGIN_REQUEST',\n    payload,\n});\n\nexport const logoutRequest = payload => ({\n    type: 'LOGOUT_REQUEST',\n    payload,\n});","export default __webpack_public_path__ + \"static/media/logo-synho-2.cce5f3c5.jpeg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BtnDarkMode from '../components/BtnDarkMode'\nimport Logo from '../assets/img/logo-synho-2.jpeg'\nimport '../assets/css/Header.css'\n\nconst Header = () => {\n    return (\n        <header>\n            <div className=\"logo-header\"><img src={Logo} style={{height:\"60px\"}}/></div>\n            <div>\n                <BtnDarkMode/>\n            </div>\n            <nav className=\"container-nav-header\">\n                <Link to=\"/ventas\">Ventas</Link>\n                <Link to=\"/compras\">Compras</Link>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\n\nconst Layout = ({children}) => (\n    <div className=\"App\">\n        <Header/>\n        {children}\n        <Footer/>\n    </div>\n  );\n  \n\nexport default Layout\n","import axios from \"axios\";\nimport API_BASE_URL from \"../config/api\";\n\nexport const ShowCompras = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/purchases-records/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeDocument = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/document/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeRecipe = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/type-recipe/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowSupplier = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/supplier/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ChangeDolar = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/change-dolar-sunat/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data: \"\",\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const CreatePucharse = async (data) => {\n    const requestUrl = `${API_BASE_URL}/purchases/create/pucharse-record/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchByDatePucharse = async (desde, hasta) => {\n    const requestUrl = `${API_BASE_URL}/purchases/search/date/${desde}/${hasta}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchPucharse = async (date) => {\n    const requestUrl = `${API_BASE_URL}/purchases/search/look/${date}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const UnitiesPucharse = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getPurcharseDetail = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/purchases/detail/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getUnitiesPurchase = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities-by-purchase/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getUnityDetail = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/detail/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const createUnityResponsable = async (data) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities-responsible/create/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const unitiesResponsableFilterView = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/purchase/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchByDateUnities = async (desde, hasta) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/search/date/${desde}/${hasta}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchUnities = async (date) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/search/look/${date}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { getPurcharseDetail, getUnitiesPurchase } from '../services/compras';\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport { Link } from 'react-router-dom';\nimport '../assets/css/ComprasDetail.css'\n\nconst CompraDetail = (props) => {\n\n    const {id} = props.match.params;\n    const [myPurchase, setMyPurchase] = useState([])\n    const [myUnities, setMyUnities] = useState([])\n    const [isLoad, setIsLoad] = useState(false)\n\n    const getPurchase = async (myId) => {\n        const result = await getPurcharseDetail(myId);\n        if (result.statusText === \"OK\") {\n            setMyPurchase(result.data[0])\n            console.log(result.data[0]);\n            const result2 = await getUnitiesPurchase(myId);\n            if (result2.statusText === \"OK\") {\n                setMyUnities(result2.data)\n                setIsLoad(true)\n            }\n        }\n    }\n\n    useEffect(() => {\n        getPurchase(id)\n    }, [id])\n\n    return (\n        <div className=\"container-page\">\n        { isLoad \n            ?   <>\n                    <h1>Datos de compra</h1>\n                    <div className=\"contenedor-top-compras-detail\">\n                        <p><b>Fecha: </b>{myPurchase.date}</p>\n                        <p><b>Mes: </b>{myPurchase.month}</p>\n                        <p><b>Año: </b>{myPurchase.year}</p>\n                        <p><b>Document: </b>{myPurchase.document.document}</p>\n                        <p><b>Tipo: </b>{myPurchase.type_recipe.recipe}</p>\n                        <p><b>Numero: </b>{myPurchase.number}</p>\n                        <p><b>Serie: </b>{myPurchase.serie}</p>\n                        <p><b>Empresa: </b>{myPurchase.supplier.business_name}</p>\n                        <p><b>Ruc: </b>{myPurchase.supplier.ruc}</p>\n                        {myPurchase.change_type\n                            ?   <>\n                                    <p><b>Tipo de Cambio: </b>{myPurchase.change_type}</p>\n                                    <p><b>Base Imponible (dolares): </b>{myPurchase.tax_base_dolar}</p>         \n                                    <p><b>IGV (soles): </b>{myPurchase.tb_igv_dolar}</p>\n                                    <p><b>Total (soles): </b>{myPurchase.tb_total_dolar}</p>\n                                </>\n                            :   <>\n                                    <p><b>Base Imponible (soles): </b>{myPurchase.tax_base}</p>            \n                                    <p><b>IGV (soles): </b>{myPurchase.tb_igv}</p>\n                                    <p><b>Total (soles): </b>{myPurchase.tb_total}</p>\n                                </>\n                        }\n                    </div>\n                    <h2>Unidades de Compra &nbsp;\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_compras_all\"\n                        filename={`compras ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    /></h2>\n                    <table className=\"tabla-ventas\" id=\"tabla_compras_all\">\n                        <tr>\n                            <th>Código de Producto</th>\n                            <th>Nombre del Producto</th>\n                            <th>Tipo</th>\n                            <th>Precio S/ (Inc. IGV)</th>\n                            <th>Precio us$ (Inc IGV)</th>\n                            <th>Fecha de Compra</th>\n                            <th>Nombre de Proveedor</th>\n                            <th>Ultimo Responsable</th>\n                            <th>Disponible</th>\n                        </tr>\n                    {myUnities.map((uni) => {\n                        return(\n                                <tr key={uni.id}>\n                                    <td><Link to={`/compras/unities/detail/${uni.id}`}>{uni.code}</Link></td>\n                                    <td>{uni.description}</td>\n                                    <td>{uni.typeOfUnity.title}</td>\n                                    <td>{uni.moneda === \"soles\" ? uni.price * 118 / 100 : \"-------\"}</td>\n                                    <td>{uni.moneda === \"dolares\" ? uni.price * 118 / 100 : \"-------\"}</td>\n                                    <td>{uni.date}</td>\n                                    <td>{uni.purchase.supplier.business_name}</td>\n                                    <td>{uni.responsable ? uni.responsable.first_name + ' ' + uni.responsable.last_name : \"---------\"}</td>\n                                    <td>{uni.available \n                                        ? <FaCheckCircle className=\"check-available\"/>\n                                        : <RiCloseCircleFill className=\"non-available\"/>\n                                    }</td>\n                                </tr>\n                        )\n                    })}\n                    </table>\n                </>\n            : <div>Cargando ...</div>\n        }\n        </div>\n    )\n}\n\nexport default CompraDetail\n","import React, { useEffect, useState } from 'react'\nimport { SearchByDatePucharse, SearchPucharse, ShowCompras } from '../services/compras';\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport { RiFileAddLine } from 'react-icons/ri'\nimport { Link } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport '../assets/css/Ventas.css'\n\nconst Compras = () => {\n\n    const [compras, setCompras] = useState([])\n    const [dateStart, setDateStart] = useState(\"\")\n    const [dateEnd, setDateEnd] = useState(\"\")\n    const [total, setTotal] = useState(0)\n    const [totalRegister, setTotalRegister] = useState(0)\n\n    const funcSumTotal = async (c) => {\n        let sumTotal = 0\n        for (let i = 0; i < c.length; i++) {\n            const element = c[i];\n            sumTotal += element.tb_total\n            sumTotal += element.tb_total_dolar\n        }\n        sumTotal = parseInt(sumTotal * 1000) / 1000\n        setTotal(sumTotal)\n        setTotalRegister(c.length)\n    }   \n \n    const getCompras = async () => {\n        const result = await ShowCompras()\n        if (result.statusText === \"OK\") {\n            setCompras(result.data)\n        }else{\n            setCompras([])\n        }\n    }\n\n    const filterDate = async (desde, hasta) => {\n        if (desde !== \"\" && hasta !== \"\") {\n            const d = new Date(dateStart.target.value).toISOString().slice(0,10)\n            const h = new Date(dateEnd.target.value).toISOString().slice(0,10)\n            const result = await SearchByDatePucharse(d, h);\n            if (result.statusText === \"OK\") {\n                setCompras(result.data)\n            }else{\n                setCompras([])\n            }\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const search = event.target.search_compra.value;\n        if (search !== \"\") {\n            const result = await SearchPucharse(search);\n            if (result.statusText === \"OK\") {\n                setCompras(result.data)\n            }else{\n                setCompras([])\n            }\n        }else{\n            getCompras()\n        }\n    }\n\n    useEffect(() => {\n        filterDate(dateStart, dateEnd)\n    }, [dateStart, dateEnd])\n\n    useEffect(() => {\n        getCompras()\n    }, [])\n\n    useEffect(() => {\n        funcSumTotal(compras)\n    }, [compras])\n\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de compras </h1>\n            </div>\n\n            <div className=\"container-all-filters\">\n                <form className=\"container-search-filter\" onSubmit={onSubmit}>\n                    <label htmlFor=\"search_compra\">\n                        Buscar: <br />\n                        <div className=\"container-input-search\">\n                            <input type=\"search\" name=\"search_compra\" id=\"search_compra\" />\n                            <button type=\"submit\"><ImSearch/></button>\n                        </div>\n                    </label>\n                </form>\n                <div className=\"container-filter-by-date\">\n                    <label htmlFor=\"fecha_desde\">\n                        Desde: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_desde\" \n                            id=\"fecha_desde\" \n                            onChange={setDateStart}\n                        />\n                    </label>\n                    \n                    <label htmlFor=\"fecha_hasta\">\n                        Hasta: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_hasta\" \n                            id=\"fecha_hasta\" \n                            onChange={setDateEnd}\n                        />\n                    </label>\n                </div>\n                <div className=\"container-save-add\">\n                    <Link className=\"btn-list-detail-unities\" to=\"/compras/unities/all\">\n                        <CgDetailsMore/>\n                    </Link>\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_compras\"\n                        filename={`registro-de-compras ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    />\n                    <Link to=\"/compras/add\">\n                        <RiFileAddLine/> Agregar\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"container-total-data\">\n                <div>\n                    <h4>Total de registros:</h4>\n                    <div>{totalRegister}</div>\n                </div>\n                <div>\n                    <h4>Total de gastos en compra:</h4>\n                    <div>S/ {total}</div>\n                </div>\n            </div>\n\n            <table className=\"tabla-ventas\" id=\"tabla_compras\">\n                <tr>\n                    <th>NUMERO DEL REGISTRO O CODIGO UNICO DE OPERACION</th>\n                    <th>FECHA DE EMISION</th>\n                    <th>TIPO</th>\n                    <th>SERIE O CDA</th>\n                    <th>NUMERO</th>\n\n                    <th>TIPO</th>\n                    <th>NUMERO</th>\n                    <th>APELLIDOS Y NOMBRES O RAZON SOCIAL</th>\n\n                    <th>BASE IMPONIBLE / OPERACION GRAVADA (soles)</th>\n                    <th>IGV (soles)</th>\n\n                    <th>VALOR DE LAS ADQUISIC: OPERACIÓN  NO GRAVADA  /OPERACIÓN INAFECTA</th>\n                    <th>OTROS TRIBUTOS Y CARGOS (dolares)</th>\n                    <th>IMPORTE TOTAL (soles)</th>\n                    <th>TIPO DE CAMBIO</th>\n                </tr>\n                {compras.map((v) => {\n                    return(\n                        <tr key={v.id}>\n                            <td style={{width: \"30px\"}}><Link to={`/compras/detail/${v.id}`}>{v.id}</Link></td>\n                            <td>{v.date}</td>\n                            <td>{v.document.number}</td>\n                            <td>{v.serie}</td>\n                            <td>{v.number}</td>\n                            \n                            <td>{v.type_recipe.number}</td>\n                            <td style={{width: \"120px\"}}>{v.supplier.ruc}</td>\n                            <td style={{width: \"400px\"}}>{v.supplier.business_name}</td>\n                            \n                            <td style={{width: \"100px\"}}>{v.tax_base}</td>\n                            <td>{v.tb_igv}</td>\n                                \n                            <td style={{width: \"150px\"}}>{v.tb_total}</td>\n                            <td>{v.tax_base_dolar}</td>\n                            <td>{v.tb_total_dolar}</td>\n                            <td>{v.change_type}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default Compras\n","import axios from \"axios\";\n\nexport const getRuc = async (ruc) => {\n    const requestUrl = `https://dniruc.apisperu.com/api/v1/ruc/${ruc}?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImJyeWFuamVzdXMucmFAZ21haWwuY29tIn0.q45fnl_Avj4zVfqCocwBR6qUt-uGP6fmANWoF-n4tsI`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { ChangeDolar, CreatePucharse, ShowTypeDocument, ShowTypeRecipe } from '../services/compras';\nimport DatePicker from 'react-date-picker';\nimport { getRuc } from '../services/externalApis';\nimport '../assets/css/VentasAdd.css'\n\nconst ComprasAdd = (props) => {\n\n    const [value, setValue] = useState(new Date());\n    const [typeDoc, setTypeDoc] = useState([])\n    const [typeRecipe, setTypeRecipe] = useState([]);\n    const [ruc, setRuc] = useState(\"\");\n    const [razonSocial, setRazonSocial] = useState(\"\")\n    const [solesDolars, setSolesDolars] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [totalSoles, setTotalSoles] = useState(0)\n    const [totalDolares, setTotalDolares] = useState(0)\n    const [valueDolar, setValueDolar] = useState(0)\n    const [ctdIGVSoles, setCtdIGVSoles] = useState(0)\n    const [ctdIGVDolar, setctdIGVDolar] = useState(0)\n    const [priceTotal, setPriceTotal] = useState(0)\n    const [priceMoment, setPriceMoment] = useState(0)\n    const [priceCapture, setPriceCapture] = useState(0)\n    const [priceTotalConvertido, setPriceTotalConvertido] = useState(0)\n\n    let codes = []\n    const codeyear = (new Date().getFullYear() + \" \").slice(2,4)\n    let codeMonth = new Date().getMonth() + 1\n    let codeDay\n    if (codeMonth < 10) {\n        codeMonth = `0${codeMonth}`\n    }\n    if (parseInt(new Date().getDate()) < 10) {\n        codeDay = `0${new Date().getDate()}`\n    } else {\n        codeDay = new Date().getDate()\n    }\n    const codeDate = codeyear + codeMonth + codeDay\n    for (let i = 1; i <= 20; i++) { \n        if (i < 10) {\n            codes.push(codeDate + '-' + `000${i}`)\n        } else {\n            codes.push(codeDate + '-' + `00${i}`)            \n        }\n    }\n\n    const updateInput = (monto) => {\n        if (monto !== NaN) {\n            const total = parseInt(monto * 1000) / 1000 * 118 / 100\n            setCtdIGVSoles(parseInt((total - monto) * 1000) / 1000)\n            setTotalSoles(total)\n        }else{\n            const total = 0\n            setTotalSoles(total)\n            setCtdIGVSoles(total)\n        }            \n    };\n\n    const updateInput2 = (monto) => {\n        if (monto !== NaN) {\n            const total = parseInt(monto * 1000) / 1000 * 118 / 100 * (parseInt(parseFloat(valueDolar) * 1000) / 1000)\n            const convertido = parseInt(monto * 1000) / 1000 * (parseInt(parseFloat(valueDolar) * 1000) / 1000)\n            setPriceTotalConvertido(convertido)\n            setctdIGVDolar(parseInt((total - convertido) * 1000) / 1000)\n            setTotalDolares(total)\n        }else{\n            const total = 0\n            setPriceTotalConvertido(total)\n            setTotalDolares(total)\n            setctdIGVDolar(total)\n        }\n    };\n\n    const getTypeDocument = async () => {\n        const result = await ShowTypeDocument()\n        setTypeDoc(result.data)\n    }\n\n    const getTypeRecipe = async () => {\n        const result = await ShowTypeRecipe()\n        setTypeRecipe(result.data)\n    }\n\n    const getMyChangeDolar = async () => {\n        const result = await ChangeDolar()\n        setValueDolar(result.data.venta);\n    }\n\n    const getSupplier = async (ruc) => {\n        const result = await getRuc(ruc)\n        if (result.data) {\n            setRazonSocial(result.data.razonSocial)\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let ur = document.getElementsByClassName(\"unity-register\")\n        let unities = []\n        let myError = false\n        \n        for (let i = 0; i < 20; i++) {\n            const element = ur[i];\n            let code\n            let description\n            let cuantity\n            let typeOfUnity\n            let price\n\n            if (element.childNodes.item(0).childNodes.item(0).value === \"\") {\n                continue\n            } else {\n                code = element.childNodes.item(0).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(1).childNodes.item(0).value === \"\") {\n                continue\n            } else {\n                description = element.childNodes.item(1).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(2).childNodes.item(0).value === \"\") {\n                setError(true)\n                myError = true\n                continue\n            } else {\n                cuantity = element.childNodes.item(2).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(3).childNodes.item(0).value === \"\") {\n                setError(true)\n                myError = true\n                continue\n            } else {\n                typeOfUnity = element.childNodes.item(3).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(4).childNodes.item(0).value === \"\") {\n                setError(true)\n                myError = true\n                continue\n            } else {\n                price = element.childNodes.item(4).childNodes.item(0).value\n            }\n            const unity = {\n                code,\n                description,\n                cuantity,\n                price,\n                typeOfUnity,\n            }\n            unities.push(unity)\n        }\n        console.log(unities);\n        // generals data\n        let data = {}\n        switch (solesDolars) {\n            case \"soles\":\n                data = {\n                    unities,\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number_recipe.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base:       parseFloat(event.target.tax_base.value),\n                    tb_igv:         parseFloat(event.target.tb_igv.value),\n                    tb_total:       parseFloat(event.target.tb_total.value),\n                    business_name:  razonSocial,\n                    moneda:         solesDolars,\n                    tax_base_dolar: null,\n                    change_type:    null,\n                    tb_igv_dolar:   null,\n                    tb_total_dolar: null,\n                }\n                break;\n            case \"dolares\":\n                data = {\n                    unities,\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number_recipe.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base_dolar: parseFloat(event.target.tax_base_dolar.value),\n                    change_type:    parseFloat(event.target.change_type.value),\n                    tb_igv_dolar:   parseFloat(event.target.tb_igv_dolar.value),\n                    tb_total_dolar: parseFloat(event.target.tb_total_dolar.value),\n                    business_name:  razonSocial,\n                    moneda:         solesDolars,\n                    tax_base:       null,\n                    tb_igv:         null,\n                    tb_total:       null,\n                }\n                break;\n            default:\n                setError(true)\n                break;\n        }\n        console.log(!myError);\n        if (!myError) {\n            const result = await CreatePucharse(data)\n            if (result.statusText === \"OK\") {\n                props.history.push(\"/compras\")\n            } else {\n                setError(true)\n            }            \n        }\n    }\n\n    useEffect(() => {\n        updateInput(priceTotal)\n    }, [priceTotal])\n\n    useEffect(() => {\n        updateInput2(priceTotal)\n    }, [priceTotal])\n\n    useEffect(() => {\n        getSupplier(ruc)\n    }, [ruc])\n\n    useEffect(() => {\n        getTypeDocument()\n    }, [])\n\n    useEffect(() => {\n        getTypeRecipe()\n    }, [])\n\n    useEffect(() => {\n        getMyChangeDolar()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <h1>Agregar Compra</h1>\n            <form className=\"form-add-venta\" onSubmit={onSubmit} >\n                <div className=\"form-1-add-venta\">\n                    <label htmlFor=\"mes_registro\">\n                        MES DE REGISTRO: &nbsp;\n                        <select name=\"month\" id=\"mes_registro\">\n                            <option value=\"\">-------------------</option>\n                            <option value=\"Enero\">Enero</option>\n                            <option value=\"Febrero\">Febrero</option>\n                            <option value=\"Marzo\">Marzo</option>\n                            <option value=\"Abril\">Abril</option>\n                            <option value=\"Mayo\">Mayo</option>\n                            <option value=\"Junio\">Junio</option>\n                            <option value=\"Julio\">Julio</option>\n                            <option value=\"Agosto\">Agosto</option>\n                            <option value=\"Setiembre\">Setiembre</option>\n                            <option value=\"Octubre\">Octubre</option>\n                            <option value=\"Noviembre\">Noviembre</option>\n                            <option value=\"Diciembre\">Diciembre</option>\n                        </select>\n                    </label>\n                    <label htmlFor=\"year\">\n                        AÑO DE REGISTRO: &nbsp;\n                        <input \n                            type=\"number\" \n                            name=\"year\" \n                            id=\"year\" \n                            style={{width:\"80px\"}}\n                            defaultValue={new Date().getFullYear()} \n                        />\n                    </label>\n                </div>\n\n                <p>COMPROBANTE DE PAGO O DOCUMENTO:</p>\n\n                <div className=\"form-2-add-venta\">\n                    <label htmlFor=\"fecha_emision\">\n                        FECHA DE EMISION: <br/>\n                        <DatePicker\n                            id=\"fecha_emision\"\n                            className=\"fecha_emision\"\n                            onChange={setValue}\n                            name=\"date\"\n                            value={value}\n                        />\n                    </label>\n                    <label htmlFor=\"document\">\n                        TIPO DE DOCUMENTO: <br />\n                        <select name=\"document\" id=\"document\">\n                            <option value=\"\">----------------------</option>\n                            {typeDoc.map((t) => <option key={t.id} value={t.document}>{t.document}</option>)}\n                        </select>\n                    </label>\n                    <label htmlFor=\"serie\">\n                        SERIE: <br />\n                        <input type=\"text\" name=\"serie\" id=\"serie\" />\n                    </label>\n                    <label htmlFor=\"number_recipe\">\n                        NÚMERO: <br />\n                        <input type=\"number\" name=\"number_recipe\" id=\"number_recipe\" />\n                    </label>\n                    <label htmlFor=\"recipe\">\n                        TIPO: <br />\n                        <select name=\"recipe\" id=\"recipe\">\n                            <option value=\"\">---------------</option>\n                            {typeRecipe.map((t) => <option key={t.id} value={t.recipe}>{t.recipe}</option>)}\n                        </select>\n                    </label>\n                </div>\n\n                <p>INFORMACION DEL PROVEEDOR:</p>\n\n                <div className=\"form-2-add-venta\">\n                    <label htmlFor=\"ruc\">\n                        RUC DEL PROVEEDOR: <br />\n                        <input \n                            type=\"number\" \n                            name=\"ruc\" \n                            id=\"ruc\" \n                            max=\"999999999999\"\n                            className=\"ruc-provedor-form\"\n                            onChange={(event) => setRuc(event.target.value)}\n                        />\n                    </label>\n                    <label htmlFor=\"razon_social\">\n                        NOMBRE O RAZÓN SOCIAL: <br />\n                        <input \n                            type=\"text\" \n                            name=\"business_name\"\n                            className=\"razon-social-form\"\n                            value={razonSocial}\n                            disabled={\"true\"}\n                        />\n                    </label>\n                </div>\n\n                <hr />\n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"1\" \n                        value=\"1\" \n                        onChange={() => setSolesDolars(\"soles\")}\n                    />&nbsp;\n                    IMPONIBLE EN SOLES \n                </p>\n                \n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"2\" \n                        value=\"2\" \n                        onChange={() => setSolesDolars(\"dolares\")}\n                    />&nbsp;\n                    IMPONIBLE EN DOLARES: \n                </p>\n\n                {solesDolars !== \"\" &&\n                    <table className=\"tabla-ventas\" id=\"tabla_compras\">\n                        <tr>\n                            <th>Código</th>\n                            <th>Descripción</th>\n                            <th>Cantidad</th>\n                            <th>Tipo</th>\n                            <th>{`Precio(sin IGV) en ${solesDolars}`}</th>\n                        </tr>\n                        {codes.map((c) => {\n                            return (\n                                <tr className=\"unity-register\">\n                                    <td><input type=\"text\" name=\"code\" value={c} disabled={true}/></td>\n                                    <td><input type=\"text\" name=\"description\"/></td>\n                                    <td><input type=\"text\" name=\"cuantity\"/></td>\n                                    <td>\n                                        <select name=\"typeOfUnity\">\n                                            <option value=\"\">---------------</option>\n                                            <option value=\"Herramientas\">Herramientas</option>\n                                            <option value=\"Consumibles\">Consumibles</option>\n                                            <option value=\"Maquinarias\">Maquinarias</option>\n                                            <option value=\"Equipo\">Equipo</option>\n                                            <option value=\"Servicio\">Servicio</option>\n                                            <option value=\"Alimentos\">Alimentos</option>\n                                            <option value=\"EPPs\">EPPs</option>\n                                        </select>\n                                    </td>\n                                    <td>\n                                        <input \n                                            type=\"number\" \n                                            name=\"price\" \n                                            step=\"0.001\"\n                                            onFocus={(event) => {\n                                                if (event.target.value !== \"\") {\n                                                    setPriceCapture(parseFloat(event.target.value))\n                                                }\n                                            }}\n                                            onBlur={() => {\n                                                setPriceTotal(priceTotal + priceMoment - priceCapture)\n                                                setPriceMoment(0)\n                                                setPriceCapture(0)\n                                            }} \n                                            onChange={(event) => {\n                                                if (event.target.value !== \"\") {\n                                                    setPriceMoment(parseFloat(event.target.value))\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </table>\n                }\n\n                {solesDolars === \"soles\" &&\n                    <div className=\"form-3-add-venta\">\n                        <label htmlFor=\"tax_base\">\n                            BASE IMPONIBLE TOTAL(en soles):\n                            <input type=\"number\" name=\"tax_base\" id=\"tax_base\" value={priceTotal} disabled={\"true\"}  />\n                        </label>\n                        <label htmlFor=\"tb_igv\">\n                            IGV:\n                            <input type=\"number\" name=\"tb_igv\" id=\"tb_igv\" value={ctdIGVSoles} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total\">\n                            TOTAL:\n                            <input type=\"number\" name=\"tb_total\" id=\"tb_total\" value={totalSoles} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n                \n                {solesDolars === \"dolares\" &&\n                    <div className=\"form-4-add-venta\">\n                        <label htmlFor=\"tax_base_dolar\">\n                            BASE IMPONIBLE TOTAL(en dolares):\n                            <input type=\"number\" name=\"tax_base_dolar\" id=\"tax_base_dolar\" value={priceTotal} disabled={\"true\"}/>\n                        </label>\n                        <label htmlFor=\"change_type\">\n                            TIPO DE CAMBIO:\n                            <input type=\"number\" name=\"change_type\" id=\"change_type\" defaultValue={valueDolar}/>\n                        </label>\n                        <label htmlFor=\"tax_base\">\n                            BASE IMPONIBLE TOTAL(en soles):\n                            <input type=\"number\" name=\"tax_base\" id=\"tax_base\" value={priceTotalConvertido} disabled={\"true\"}  />\n                        </label>\n                        <label htmlFor=\"tb_igv_dolar\">\n                            IGV:\n                            <input type=\"number\" name=\"tb_igv_dolar\" id=\"tb_igv_dolar\" value={ctdIGVDolar} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total_dolar\">\n                            TOTAL:\n                            <input type=\"number\" name=\"tb_total_dolar\" id=\"tb_total_dolar\" value={totalDolares} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n\n                <hr />\n                {error &&\n                    <p className=\"error\">Completar todos los campos correctamente</p>\n                }\n                <button type=\"submit\">Agregar compra</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ComprasAdd\n","import React from 'react'\nimport '../assets/css/Home.css'\n\nconst Home = () => {\n    return (\n        <main className=\"container-page\">\n            screen home\n        </main>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            ERROR 404\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { useEffect, useState } from 'react'\nimport { SearchByDateUnities, SearchUnities, UnitiesPucharse } from '../services/compras'\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport { ImSearch } from 'react-icons/im'\nimport { Link } from 'react-router-dom'\nimport '../assets/css/UnidadesCompra.css'\n\nconst UnidadesCompra = () => {\n\n    const [unities, setUnities] = useState([])\n    const [dateStart, setDateStart] = useState(\"\")\n    const [dateEnd, setDateEnd] = useState(\"\")\n\n    const getUnities = async () => {\n        const result = await UnitiesPucharse();\n        setUnities(result.data)\n        console.log(result.data);\n    }\n\n    const filterDate = async (desde, hasta) => {\n        if (desde !== \"\" && hasta !== \"\") {\n            const d = new Date(dateStart.target.value).toISOString().slice(0,10)\n            const h = new Date(dateEnd.target.value).toISOString().slice(0,10)\n            const result = await SearchByDateUnities(d, h);\n            if (result.statusText === \"OK\") {\n                setUnities(result.data)\n            }else{\n                setUnities([])\n            }\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const search = event.target.search_compra.value;\n        if (search !== \"\") {\n            const result = await SearchUnities(search);\n            if (result.statusText === \"OK\") {\n                setUnities(result.data)\n            }else{\n                setUnities([])\n            }\n        }else{\n            getUnities()\n        }\n    }\n\n    useEffect(() => {\n        filterDate(dateStart, dateEnd)\n    }, [dateStart, dateEnd])\n\n    useEffect(() => {\n        getUnities()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de Productos de Compra </h1>\n            </div>\n\n            <div className=\"container-all-filters\">\n                <form className=\"container-search-filter\" onSubmit={onSubmit}>\n                    <label htmlFor=\"search_compra\">\n                        Buscar: <br />\n                        <div className=\"container-input-search\">\n                            <input type=\"search\" name=\"search_compra\" id=\"search_compra\" />\n                            <button type=\"submit\"><ImSearch/></button>\n                        </div>\n                    </label>\n                </form>\n                <div className=\"container-filter-by-date\">\n                    <label htmlFor=\"fecha_desde\">\n                        Desde: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_desde\" \n                            id=\"fecha_desde\" \n                            onChange={setDateStart}\n                        />\n                    </label>\n                    \n                    <label htmlFor=\"fecha_hasta\">\n                        Hasta: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_hasta\" \n                            id=\"fecha_hasta\" \n                            onChange={setDateEnd}\n                        />\n                    </label>\n                </div>\n                <div className=\"container-save-add\">\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_compras\"\n                        filename={`registro-de-compras ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    />\n                </div>\n            </div><br />\n\n            <table className=\"tabla-ventas\">\n                <tr>\n                    <th>Código de Producto</th>\n                    <th>Nombre del Producto</th>\n                    <th>Tipo</th>\n                    <th>Precio S/ (Inc. IGV)</th>\n                    <th>Precio us$ (Inc IGV)</th>\n                    <th>Fecha de Compra</th>\n                    <th>Nombre de Proveedor</th>\n                    <th>Ultimo Responsable</th>\n                    <th>Disponible</th>\n                </tr>\n                {unities.map((u) => {\n                    return(\n                        <tr key={u.id}>\n                            <td><Link to={`/compras/unities/detail/${u.id}`}>{u.code}</Link></td>\n                            <td>{u.description}</td>\n                            <td>{u.typeOfUnity.title}</td>\n                            <td>{u.moneda === \"soles\" ? u.price * 118 / 100 : \"-------\"}</td>\n                            <td>{u.moneda === \"dolares\" ? u.price * 118 / 100 : \"-------\"}</td>\n                            <td>{u.date}</td>\n                            <td>{u.purchase.supplier.business_name}</td>\n                            <td>{u.responsable ? u.responsable.first_name + ' ' + u.responsable.last_name : \"---------\"}</td>\n                            <td>{u.available \n                                ? <FaCheckCircle className=\"check-available\"/>\n                                : <RiCloseCircleFill className=\"non-available\"/>\n                            }</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default UnidadesCompra\n","import React, { useEffect, useState } from 'react'\nimport { createUnityResponsable, getUnityDetail, unitiesResponsableFilterView } from '../services/compras'\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport { IoCloseCircle } from 'react-icons/io5'\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport '../assets/css/UnidadesCompraDetail.css'\nimport { AllUsers } from '../services/userServices'\n\nconst UnidadesCompraDetail = (props) => {\n\n    const {id} = props.match.params;\n    const [unity, setUnity] = useState([])\n    const [responsables, setResponsables] = useState([])\n    const [isLoad, setIsLoad] = useState(false)\n    const [isOpen, setisOpen] = useState(false)\n    const [allUsers, setAllUsers] = useState([])\n    const [error, setError] = useState(false)\n\n    const getMyUnity = async (myId) => {\n        const result = await getUnityDetail(myId)\n        if (result.statusText == \"OK\") {\n            setUnity(result.data[0]);      \n            const result2 = await unitiesResponsableFilterView(myId)\n            setResponsables(result2.data);    \n            setIsLoad(true)\n        }\n    }\n\n    const getAllUsers = async () => {\n        const result = await AllUsers();\n        setAllUsers(result.data)\n    }\n\n    const openModal = async () => {\n        setisOpen(true)\n    }\n\n    const closeModal = async () => {\n        setisOpen(false)\n    }\n\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        const data = {\n            unity: unity.id,\n            date: event.target.date.value,\n            available: unity.available,\n            reason: event.target.reason.value,\n            responsable: parseInt(event.target.responsable.value),\n            state: event.target.state.value,\n        }\n        const result = await createUnityResponsable(data);\n        if (result.statusText === \"OK\") {\n            getMyUnity(id)            \n            setisOpen(false)\n        }else{\n            setError(true)\n        }\n    }\n\n    useEffect(() => {\n        getMyUnity(id)\n    }, [id])\n\n    useEffect(() => {\n        getAllUsers()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <h1>Datos del Producto Detalle</h1>\n            {unity.available \n                ? <button onClick={openModal} className=\"btn-avaiable-product\">Retirar</button>\n                : <button onClick={openModal} className=\"btn-avaiable-product\">Devolver</button>\n            }\n            {isLoad \n                ?   <div className=\"container-top-unities-detail\">\n                        <p><b>Codigo: </b>{unity.code}</p>\n                        <p><b>Fecha: </b>{unity.date}</p>\n                        <p><b>Titulo: </b>{unity.description}</p>\n                        <p><b>Precio: </b>{unity.moneda === \"soles\" ? \"S/\" : \"$\"} {unity.price}</p>\n                        <p><b>Razon Social: </b>{unity.purchase.supplier.business_name}</p>\n                        <p><b>Ruc: </b>{unity.purchase.supplier.ruc}</p>\n                        <p><b>Tipo: </b>{unity.typeOfUnity.title}</p>\n                        <p><b>Disponible: </b>{unity.available \n                            ? <FaCheckCircle className=\"check-available\"/>\n                            : <RiCloseCircleFill className=\"non-available\"/>\n                        }</p>\n                    </div>  \n                :   \"Cargando...\"\n            }\n            <h2>Historial del producto: &nbsp;\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_historial\"\n                        filename={`registro-historial ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    /></h2>\n            <table className=\"tabla-ventas\" id=\"tabla_historial\">\n                <tr>\n                    <th>Fecha</th>\n                    <th>Accion</th>\n                    <th>Motivo</th>\n                    <th>Responsable</th>\n                    <th>Estado</th>\n                </tr>\n                {responsables.map((r) => {\n                    return(\n                        <tr>\n                            <td>{r.date}</td>\n                            <td>{r.available \n                                    ? <span className=\"retiro-product\">Retiro</span>\n                                    : <span className=\"devolucion-product\">Devolucion</span>\n                            }</td>\n                            <td>{r.reason}</td>\n                            <td>{r.responsable.first_name} {r.responsable.last_name}</td>\n                            <td>{r.state}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n            {isOpen\n                ?   <div className=\"container-modal-product\">\n                        <div className=\"container-content-modal-product\">\n                            <div className=\"btn-close-modal-product\">\n                                <IoCloseCircle onClick={closeModal}/>\n                            </div>\n                            <h3>Formulario de {unity.available ? \"Retiro\" : \"Devolucion\"}</h3>\n                            <form onSubmit={onSubmit} className=\"content-modal-product\">\n                                <label htmlFor=\"date\">Fecha: </label>&nbsp;\n                                <input type=\"date\" name=\"date\" id=\"date\" /><br />\n                                <label htmlFor=\"reason\">Motivo: </label><br />\n                                <textarea name=\"reason\" id=\"reason\"></textarea><br />\n                                <label htmlFor=\"responsable\">Responsable: </label>&nbsp;\n                                <select name=\"responsable\" id=\"responsable\">\n                                    <option value=\"\">-------------------------------</option>\n                                    {allUsers.map((u) => {\n                                        return(\n                                            <option key={u.id} value={u.id}>{u.first_name} {u.last_name}</option>\n                                        )\n                                    })}\n                                </select><br />\n                                <label htmlFor=\"state\">Estado: </label><br />\n                                <input type=\"text\" name=\"state\" id=\"state\"/>\n                                {error && <div className=\"error\">Completar bien el formulario</div>}\n                                <button type=\"submit\">Enviar</button>\n                            </form>\n                        </div>\n                    </div>\n                : null\n            }\n        </div>\n    )\n}\n\nexport default UnidadesCompraDetail\n","import React from 'react'\n\nconst UnidadesVenta = () => {\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de Productos de Venta </h1>\n            </div>\n        </div>\n    )\n}\n\nexport default UnidadesVenta\n","import axios from \"axios\";\nimport API_BASE_URL from \"../config/api\";\n\nexport const ShowVentas = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/sales-records/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeDocument = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/document/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeRecipe = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/type-recipe/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowSupplier = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/supplier/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ChangeDolar = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/change-dolar-sunat/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data: \"\",\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const CreateSale = async (data) => {\n    const requestUrl = `${API_BASE_URL}/sales/create/sale-record/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchByDateSale = async (desde, hasta) => {\n    const requestUrl = `${API_BASE_URL}/sales/search/date/${desde}/${hasta}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchSale = async (data) => {\n    const requestUrl = `${API_BASE_URL}/sales/search/look/${data}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { SearchByDateSale, SearchSale, ShowVentas } from '../services/ventas';\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport { RiFileAddLine } from 'react-icons/ri'\nimport { Link } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport '../assets/css/Ventas.css'\n\nconst Ventas = () => {\n\n    const [ventas, setVentas] = useState([])\n    const [dateStart, setDateStart] = useState(\"\")\n    const [dateEnd, setDateEnd] = useState(\"\")\n    const [total, setTotal] = useState(0)\n    const [totalRegister, setTotalRegister] = useState(0)\n\n    const funcSumTotal = async (c) => {\n        let sumTotal = 0\n        for (let i = 0; i < c.length; i++) {\n            const element = c[i];\n            sumTotal += element.tb_total\n            sumTotal += element.tb_total_dolar\n        }\n        sumTotal = parseInt(sumTotal * 1000) / 1000\n        setTotal(sumTotal)\n        setTotalRegister(c.length)\n    }   \n\n    const getVentas = async () => {\n        const result = await ShowVentas()\n        if (result.statusText === \"OK\") {\n            setVentas(result.data)\n        }else{\n            setVentas([])\n        }\n    }\n\n    const filterDate = async (desde, hasta) => {\n        if (desde !== \"\" && hasta !== \"\") {\n            const d = new Date(dateStart.target.value).toISOString().slice(0,10)\n            const h = new Date(dateEnd.target.value).toISOString().slice(0,10)\n            const result = await SearchByDateSale(d, h);\n            if (result.statusText === \"OK\") {\n                setVentas(result.data)\n            }else{\n                setVentas([])\n            }    \n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const search = event.target.search_compra.value;\n        if (search !== \"\") {\n            const result = await SearchSale(search);\n            if (result.statusText === \"OK\") {\n                setVentas(result.data)\n            }else{\n                setVentas([])\n            }\n        }else{\n            getVentas()\n        }\n    }\n\n    useEffect(() => {\n        filterDate(dateStart, dateEnd)\n    }, [dateStart, dateEnd])\n\n    useEffect(() => {\n        getVentas()\n    }, [])\n\n    useEffect(() => {\n        funcSumTotal(ventas)\n    }, [ventas])\n\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de Ventas </h1>\n            </div>\n\n            <div className=\"container-all-filters\">\n                <form className=\"container-search-filter\" onSubmit={onSubmit}>\n                    <label htmlFor=\"search_compra\">\n                        Buscar: <br />\n                        <div className=\"container-input-search\">\n                            <input type=\"search\" name=\"search_compra\" id=\"search_compra\" />\n                            <button type=\"submit\"><ImSearch/></button>\n                        </div>\n                    </label>\n                </form>\n                <div className=\"container-filter-by-date\">\n                    <label htmlFor=\"fecha_desde\">\n                        Desde: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_desde\" \n                            id=\"fecha_desde\" \n                            onChange={setDateStart}\n                        />\n                    </label>\n                    \n                    <label htmlFor=\"fecha_hasta\">\n                        Hasta: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_hasta\" \n                            id=\"fecha_hasta\" \n                            onChange={setDateEnd}\n                        />\n                    </label>\n                </div>\n                <div className=\"container-save-add\">\n                    <Link className=\"btn-list-detail-unities\" to=\"/ventas/unities/all\">\n                        <CgDetailsMore/>\n                    </Link>\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_compras\"\n                        filename={`registro-de-compras ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    />\n                    <Link to=\"/ventas/add\">\n                        <RiFileAddLine/> Agregar\n                    </Link>\n                </div>\n            </div>\n            \n            <div className=\"container-total-data\">\n                <div>\n                    <h4>Total de registros:</h4>\n                    <div>{totalRegister}</div>\n                </div>\n                <div>\n                    <h4>Total de gastos en compra:</h4>\n                    <div>S/ {total}</div>\n                </div>\n            </div>\n\n            <table className=\"tabla-ventas\" id=\"tabla_ventas\">\n                <tr>\n                    <th>NUMERO DEL REGISTRO O CODIGO UNICO DE OPERACION</th>\n                    <th>FECHA DE EMISION</th>\n                    <th>TIPO</th>\n                    <th>SERIE O CDA</th>\n                    <th>NUMERO</th>\n\n                    <th>TIPO</th>\n                    <th>NUMERO</th>\n                    <th>APELLIDOS Y NOMBRES O RAZON SOCIAL</th>\n\n                    <th>BASE IMPONIBLE / OPERACION GRAVADA (soles)</th>\n                    <th>IGV (soles)</th>\n\n                    <th>VALOR DE LAS ADQUISIC: OPERACIÓN  NO GRAVADA  /OPERACIÓN INAFECTA</th>\n                    <th>OTROS TRIBUTOS Y CARGOS</th>\n                    <th>IMPORTE TOTAL (soles)</th>\n                    <th>TIPO DE CAMBIO</th>\n                </tr>\n                {ventas.map((v,index) => {\n                    return(\n                        <tr key={v.id}>\n                            <td style={{width: \"30px\"}}>{v.id}</td>\n                            <td>{v.date}</td>\n                            <td>{v.document.number}</td>\n                            <td>{v.serie}</td>\n                            <td>{v.number}</td>\n                            \n                            <td>{v.type_recipe.number}</td>\n                            <td style={{width: \"120px\"}}>{v.supplier.ruc}</td>\n                            <td style={{width: \"400px\"}}>{v.supplier.business_name}</td>\n                            \n                            <td style={{width: \"100px\"}}>{v.tax_base}</td>\n                            <td>{v.tb_igv}</td>\n                                \n                            <td style={{width: \"150px\"}}>{v.tb_total}</td>\n                            <td>{v.tax_base_dolar}</td>\n                            <td>{v.tb_total_dolar}</td>\n                            <td>{v.change_type}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default Ventas\n","import React, { useEffect, useState } from 'react'\nimport { ChangeDolar, CreateSale, ShowTypeDocument, ShowTypeRecipe } from '../services/ventas';\nimport DatePicker from 'react-date-picker';\nimport '../assets/css/VentasAdd.css'\nimport { getRuc } from '../services/externalApis';\n\nconst VentasAdd = (props) => {\n\n    const [value, setValue] = useState(new Date());\n    const [typeDoc, setTypeDoc] = useState([])\n    const [typeRecipe, setTypeRecipe] = useState([]);\n    const [ruc, setRuc] = useState(\"\");\n    const [razonSocial, setRazonSocial] = useState(\"\")\n    const [solesDolars, setSolesDolars] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [totalSoles, setTotalSoles] = useState(0)\n    const [totalDolares, setTotalDolares] = useState(0)\n    const [valueDolar, setValueDolar] = useState(0)\n\n    const updateInput = (event) => {\n        const monto = parseFloat(event.target.value)\n        if (!isNaN(parseFloat(event.target.value))) {\n            const total = monto * 1.18\n            setTotalSoles(total)\n        }else{\n            const total = 0\n            setTotalSoles(total)\n        }\n            \n    };\n\n    const updateInput2 = (event) => {\n        const monto = parseFloat(event.target.value)\n        if (!isNaN(parseFloat(event.target.value))) {\n            const total = monto * 1.18 * parseFloat(valueDolar) \n            setTotalDolares(total)\n        }else{\n            const total = 0\n            setTotalDolares(total)\n        }\n    };\n\n    const getTypeDocument = async () => {\n        const result = await ShowTypeDocument()\n        setTypeDoc(result.data)\n    }\n\n    const getTypeRecipe = async () => {\n        const result = await ShowTypeRecipe()\n        setTypeRecipe(result.data)\n    }\n\n    const getMyChangeDolar = async () => {\n        const result = await ChangeDolar()\n        setValueDolar(result.data.venta);\n    }\n\n    const getSupplier = async (ruc) => {\n        const result = await getRuc(ruc)\n        if (result.data) {\n            setRazonSocial(result.data.razonSocial)\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let data = {}\n        switch (solesDolars) {\n            case \"soles\":\n                data = {\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base:       parseFloat(event.target.tax_base.value),\n                    tb_igv:         parseFloat(event.target.tb_igv.value),\n                    tb_total:       parseFloat(event.target.tb_total.value),\n                    business_name:  razonSocial,\n                    tax_base_dolar: null,\n                    change_type:    null,\n                    tb_igv_dolar:   null,\n                    tb_total_dolar: null,\n                }\n                break;\n            case \"dolares\":\n                data = {\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base_dolar: parseFloat(event.target.tax_base_dolar.value),\n                    change_type:    parseFloat(event.target.change_type.value),\n                    tb_igv_dolar:   parseFloat(event.target.tb_igv_dolar.value),\n                    tb_total_dolar: parseFloat(event.target.tb_total_dolar.value),\n                    business_name:  razonSocial,\n                    tax_base:       null,\n                    tb_igv:         null,\n                    tb_total:       null,\n                }\n                break;\n            default:\n                setError(true)\n                break;\n        }\n        const result = await CreateSale(data)\n        if (result.statusText === \"OK\") {\n            props.history.push(\"/ventas\")\n        } else {\n            setError(true)\n        }\n        console.log(result);\n    }\n\n    useEffect(() => {\n        getSupplier(ruc)\n    }, [ruc])\n\n    useEffect(() => {\n        getTypeDocument()\n    }, [])\n\n    useEffect(() => {\n        getTypeRecipe()\n    }, [])\n\n    useEffect(() => {\n        getMyChangeDolar()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <h1>Agregar Venta</h1>\n            <form className=\"form-add-venta\" onSubmit={onSubmit} >\n                <div className=\"form-1-add-venta\">\n                    <label htmlFor=\"mes_registro\">\n                        MES DE REGISTRO:&nbsp;\n                        <select name=\"month\" id=\"mes_registro\">\n                            <option value=\"\">------------</option>\n                            <option value=\"Enero\">Enero</option>\n                            <option value=\"Febrero\">Febrero</option>\n                            <option value=\"Marzo\">Marzo</option>\n                            <option value=\"Abril\">Abril</option>\n                            <option value=\"Mayo\">Mayo</option>\n                            <option value=\"Junio\">Junio</option>\n                            <option value=\"Julio\">Julio</option>\n                            <option value=\"Agosto\">Agosto</option>\n                            <option value=\"Setiembre\">Setiembre</option>\n                            <option value=\"Octubre\">Octubre</option>\n                            <option value=\"Noviembre\">Noviembre</option>\n                            <option value=\"Diciembre\">Diciembre</option>\n                        </select>\n                    </label>\n                    <label htmlFor=\"year\">\n                        AÑO DE REGISTRO:&nbsp;\n                        <input \n                            type=\"number\" \n                            name=\"year\" \n                            id=\"year\" \n                            placeholder={new Date().getFullYear()} \n                        />\n                    </label>\n                </div>\n\n                <p>COMPROBANTE DE PAGO O DOCUMENTO:</p>\n\n                <div className=\"form-2-add-venta\">\n                    <label htmlFor=\"fecha_emision\">\n                        FECHA DE EMISION: &nbsp;\n                        <DatePicker\n                            id=\"fecha_emision\"\n                            className=\"fecha_emision\"\n                            onChange={setValue}\n                            name=\"date\"\n                            value={value}\n                        />\n                    </label>\n                    <label htmlFor=\"document\">\n                        TIPO DE DOCUMENTO:&nbsp;\n                        <select name=\"document\" id=\"document\">\n                            <option value=\"\">------------------</option>\n                            {typeDoc.map((t) => <option key={t.id} value={t.document}>{t.document}</option>)}\n                        </select>\n                    </label>\n                    <label htmlFor=\"serie\">\n                        SERIE:&nbsp;\n                        <input type=\"text\" name=\"serie\" id=\"serie\" />\n                    </label>\n                    <label htmlFor=\"number\">\n                        NÚMERO:&nbsp;\n                        <input type=\"number\" name=\"number\" id=\"number\" />\n                    </label>\n                    <label htmlFor=\"recipe\">\n                        TIPO:&nbsp;\n                        <select name=\"recipe\" id=\"recipe\">\n                            <option value=\"\">------------------</option>\n                            {typeRecipe.map((t) => <option key={t.id} value={t.recipe}>{t.recipe}</option>)}\n                        </select>\n                    </label>\n                    <label htmlFor=\"ruc\">\n                        RUC DEL PROVEEDOR:&nbsp;\n                        <input \n                            type=\"number\" \n                            name=\"ruc\" \n                            id=\"ruc\" \n                            min=\"0\"\n                            max=\"777777777777\"\n                            onChange={(event) => setRuc(event.target.value)}\n                        />\n                    </label>\n                    <label htmlFor=\"razon_social\">\n                        NOMBRE O RAZÓN SOCIAL:&nbsp;\n                        <input \n                            type=\"text\" \n                            name=\"business_name\"\n                            className=\"razon-social-form\"\n                            value={razonSocial}\n                            disabled={\"true\"}\n                        />\n                    </label>\n                </div>\n\n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"1\" \n                        value=\"1\" \n                        onChange={() => setSolesDolars(\"soles\")}\n                    />&nbsp;\n                    IMPONIBLE EN SOLES \n                </p>\n                \n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"2\" \n                        value=\"2\" \n                        onChange={() => setSolesDolars(\"dolares\")}\n                    />&nbsp;\n                    IMPONIBLE EN DOLARES: \n                </p>\n\n                {solesDolars === \"soles\" &&\n                    <div className=\"form-3-add-venta\">\n                        <label htmlFor=\"tax_base\">\n                            BASE IMPONIBLE (en soles):&nbsp;\n                            <input type=\"number\" name=\"tax_base\" id=\"tax_base\" step=\"0.001\" onChange={updateInput} />\n                        </label>\n                        <label htmlFor=\"tb_igv\">\n                            IGV:&nbsp;\n                            <input type=\"number\" name=\"tb_igv\" id=\"tb_igv\" step=\"0.01\" value=\"0.18\" disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total\">\n                            TOTAL:&nbsp;\n                            <input type=\"number\" name=\"tb_total\" id=\"tb_total\" onChange={updateInput} value={totalSoles} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n                \n                {solesDolars === \"dolares\" &&\n                    <div className=\"form-4-add-venta\">\n                        <label htmlFor=\"tax_base_dolar\">\n                            BASE IMPONIBLE (en dolares):&nbsp;\n                            <input type=\"number\" name=\"tax_base_dolar\" id=\"tax_base_dolar\" onChange={updateInput2} />\n                        </label>\n                        <label htmlFor=\"change_type\">\n                            TIPO DE CAMBIO:&nbsp;\n                            <input type=\"number\" name=\"change_type\" id=\"change_type\" value={valueDolar} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_igv_dolar\">\n                            IGV:&nbsp;\n                            <input type=\"number\" name=\"tb_igv_dolar\" id=\"tb_igv_dolar\" value=\"0.18\" disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total_dolar\">\n                            TOTAL:&nbsp;\n                            <input type=\"number\" name=\"tb_total_dolar\" id=\"tb_total_dolar\" onChange={updateInput2} value={totalDolares} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n\n                {error &&\n                    <p className=\"error\">Completar todos los campos correctamente</p>\n                }\n                <button type=\"submit\">Agregar venta</button>\n            </form>\n        </div>\n    )\n}\n\nexport default VentasAdd\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from '../layout/Layout'\nimport CompraDetail from '../pages/CompraDetail'\nimport Compras from '../pages/Compras'\nimport ComprasAdd from '../pages/ComprasAdd'\nimport Home from '../pages/Home'\nimport NotFound from '../pages/NotFound'\nimport UnidadesCompra from '../pages/UnidadesCompra'\nimport UnidadesCompraDetail from '../pages/UnidadesCompraDetail'\nimport UnidadesVenta from '../pages/UnidadesVenta'\nimport Ventas from '../pages/Ventas'\nimport VentasAdd from '../pages/VentasAdd'\n\nexport const DashboardRoutes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route exact path=\"/\" component={ Home }/>\n                <Route exact path=\"/ventas\" component={ Ventas }/>\n                <Route exact path=\"/ventas/add\" component={ VentasAdd }/>\n                <Route exact path=\"/ventas/unities/all\" component={ UnidadesVenta }/>\n                <Route exact path=\"/compras\" component={ Compras }/>\n                <Route exact path=\"/compras/add\" component={ ComprasAdd }/>\n                <Route exact path=\"/compras/unities/all\" component={ UnidadesCompra }/>\n                <Route exact path=\"/compras/detail/:id\" component={ CompraDetail }/>\n                <Route exact path=\"/compras/unities/detail/:id\" component={ UnidadesCompraDetail }/>\n                <Route component={NotFound} />\n            </Switch>\n        </Layout>\n    )\n}\n","import React, { useReducer } from 'react'\nimport { createBrowserHistory } from 'history';\nimport { AuthContext } from '../auth/AuthContext'\nimport reducer from '../reducers'\nimport { BrowserRouter, Router, Switch } from 'react-router-dom';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport Login from '../pages/Login';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { parseJwt } from '../helpers/decodeJWT';\n\nconst history = createBrowserHistory();\n\nconst init = () => {\n  let myUser;\n  const myToken  = sessionStorage.getItem(\"crdt\");\n  if (myToken === null) {\n    myUser = {\n      logged: false\n    }\n  }else{\n    const myPayload = parseJwt(myToken)\n    myUser = {\n      id: myPayload.user_id,\n      email: myPayload.email,\n      first_name: myPayload.first_name,\n      last_name: myPayload.last_name,\n      logged: true,\n    }\n  }\n  return myUser;\n}\n\nconst App = () => {\n\n  const [user, dispatch] = useReducer(reducer, {}, init)\n\n  return (\n    <AuthContext.Provider value={{ user, dispatch }}>\n      <BrowserRouter>\n        <Router history={history}>\n            <Switch>\n              <PublicRoute\n                exact \n                path=\"/login\" \n                component={Login} \n                isAuthenticated={ user.logged }\n              />\n              <PrivateRoute\n                path=\"/\" \n                component={DashboardRoutes} \n                isAuthenticated={ user.logged }\n              />             \n            </Switch>\n        </Router>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\nimport './index.css';\nimport App from './routes/App';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst preloadedState = window.__PRELOADED_STATE__;\nconst store = createStore(reducer, preloadedState, composeEnhancers(applyMiddleware(thunk)));\n\ndelete window.__PRELOADED_STATE__;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}