{"version":3,"sources":["reportWebVitals.js","helpers/decodeJWT.js","reducers/index.js","auth/AuthContext.js","routes/PublicRoute.js","routes/PrivateRoute.js","config/api.js","services/userServices.js","components/BtnDarkMode.jsx","pages/Login.jsx","actions/index.js","layout/Header.jsx","layout/Footer.jsx","layout/Layout.jsx","services/compras.js","pages/CompraDetail.jsx","pages/Compras.jsx","services/externalApis.js","pages/ComprasAdd.jsx","pages/Home.jsx","pages/NotFound.jsx","pages/UnidadesCompra.jsx","pages/UnidadesCompraDetail.jsx","pages/UnidadesVenta.jsx","services/ventas.js","pages/Ventas.jsx","pages/VentasAdd.jsx","routes/DashboardRoutes.js","routes/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","reducer","state","action","type","myPayload","payload","access","id","email","username","first_name","last_name","logged","user","AuthContext","createContext","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","sessionStorage","setItem","location","pathname","API_BASE_URL","LoginService","data","a","requestUrl","axios","url","method","resp","status","AllUsers","BtnDarkMode","useState","localStorage","getItem","darkMode","setDarkMode","handleMode","event","target","checked","document","body","classList","remove","add","className","defaultChecked","onChange","htmlFor","mapDispatchToProps","loginRequest","connect","dispatch","useContext","form","setValues","btnDisable","setBtnDisable","error","setError","errorLogin","setErrorLogin","updateInput","name","value","handleSubmit","preventDefault","length","password","result","statusText","refresh","history","useEffect","style","margin","borderColor","onSubmit","placeholder","required","disabled","Date","getFullYear","Header","Footer","Layout","children","ShowCompras","ShowTypeDocument","ShowTypeRecipe","ChangeDolar","CreatePucharse","SearchByDatePucharse","desde","hasta","SearchPucharse","date","UnitiesPucharse","getPurcharseDetail","getUnitiesPurchase","getUnityDetail","createUnityResponsable","unitiesResponsableFilterView","CompraDetail","match","params","myPurchase","setMyPurchase","myUnities","setMyUnities","isLoad","setIsLoad","getPurchase","myId","console","log","result2","month","year","type_recipe","recipe","number","serie","supplier","business_name","ruc","change_type","tax_base_dolar","tb_igv_dolar","tb_total_dolar","tax_base","tb_igv","tb_total","uni","code","description","typeOfUnity","title","moneda","price","purchase","responsable","available","Compras","compras","setCompras","dateStart","setDateStart","dateEnd","setDateEnd","total","setTotal","totalRegister","setTotalRegister","funcSumTotal","sumTotal","i","element","parseInt","getCompras","filterDate","d","toISOString","h","search","search_compra","table","filename","getDate","getMonth","sheet","buttonText","v","width","getRuc","ComprasAdd","setValue","typeDoc","setTypeDoc","typeRecipe","setTypeRecipe","setRuc","razonSocial","setRazonSocial","solesDolars","setSolesDolars","totalSoles","setTotalSoles","totalDolares","setTotalDolares","valueDolar","setValueDolar","ctdIGVSoles","setCtdIGVSoles","ctdIGVDolar","setctdIGVDolar","priceTotal","setPriceTotal","priceMoment","setPriceMoment","priceCapture","setPriceCapture","priceTotalConvertido","setPriceTotalConvertido","codes","codeyear","codeMonth","codeDate","push","getTypeDocument","getTypeRecipe","getMyChangeDolar","venta","getSupplier","ur","getElementsByClassName","unities","myError","cuantity","childNodes","item","unity","parseFloat","number_recipe","monto","NaN","convertido","updateInput2","defaultValue","t","max","step","onFocus","onBlur","Home","NotFound","UnidadesCompra","setUnities","getUnities","u","UnidadesCompraDetail","setUnity","responsables","setResponsables","isOpen","setisOpen","allUsers","setAllUsers","getMyUnity","getAllUsers","openModal","closeModal","reason","onClick","r","UnidadesVenta","ShowVentas","CreateSale","SearchByDateSale","SearchSale","Ventas","ventas","setVentas","getVentas","index","VentasAdd","isNaN","min","DashboardRoutes","exact","path","createBrowserHistory","init","myUser","myToken","user_id","App","useReducer","Provider","Login","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","__PRELOADED_STATE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.42a4d885.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const parseJwt = token => {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload);\n}","import { parseJwt } from \"../helpers/decodeJWT\";\n\nconst reducer = (state , action) => {\n  switch (action.type) {\n    case 'LOGIN_REQUEST': \n      const myPayload = parseJwt(action.payload.access);\n      return {\n        ...state,\n        id: myPayload.id,\n        email: myPayload.email,\n        username: myPayload.username,\n        first_name: myPayload.first_name,\n        last_name: myPayload.last_name,\n        logged: true\n      }\n    case 'LOGOUT_REQUEST':\n      return {\n        ...state,\n        user: action.payload,\n        logged: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n};\n\nexport default reducer;","import { createContext } from \"react\";\n\nexport const AuthContext = createContext();","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" />)\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n\n    sessionStorage.setItem('lastPath', rest.location.pathname)\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n}","const API_BASE_URL = \"https://facturacion-synho.herokuapp.com/api\";\n// const API_BASE_URL = \"http://localhost:8000/api\";\nexport default API_BASE_URL;","import axios from \"axios\";\nimport API_BASE_URL from \"../config/api\";\n\nexport const LoginService = async (data) => {\n    const requestUrl = `${API_BASE_URL}/login/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const AllUsers = async () => {\n    const requestUrl = `${API_BASE_URL}/users/all-users/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}","import React, { useState } from 'react'\n\nconst BtnDarkMode = () => {\n\n    const [darkMode, setDarkMode] = useState(JSON.parse(localStorage.getItem(\"darkMode\")) || false)\n\n    const handleMode = async (event) => {\n        if (event.target.checked) {\n            localStorage.setItem(\"darkMode\",true)\n            setDarkMode(true)\n            document.body.classList.remove('is-light-mode')\n            document.body.classList.add('is-dark-mode')\n        }else{\n            localStorage.setItem(\"darkMode\",false)\n            setDarkMode(false)\n            document.body.classList.remove('is-dark-mode')\n            document.body.classList.add('is-light-mode')\n        }\n    }\n\n    return (\n        <div className=\"dark-mode\">\n            <p className=\"dark-mode-title\">\n                {darkMode\n                    ? \"Dark Mode\"\n                    : \"Light Mode\"\n                }\n            </p>\n            <input \n                type=\"checkbox\" \n                className=\"checkbox\" \n                id=\"checkbox\"\n                defaultChecked={darkMode}\n                onChange={handleMode}\n            />\n            <label className=\"switch\" htmlFor=\"checkbox\">\n            </label>\n        </div>\n    )\n}\n\nexport default BtnDarkMode\n","import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../auth/AuthContext';\nimport { LoginService } from '../services/userServices'\nimport { loginRequest } from \"../actions\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../assets/css/Login.css'\nimport BtnDarkMode from '../components/BtnDarkMode';\n\nconst Login = (props) => {\n\n    const {dispatch} = useContext(AuthContext)\n    const [form, setValues] = useState({});\n    const [btnDisable, setBtnDisable] = useState(false)\n    const [error, setError] = useState(false)\n    const [errorLogin, setErrorLogin] = useState(false)\n\n    const updateInput = event => {\n        setValues({\n            ...form,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (form.email.length === 0 || form.password.length === 0) {\n            setError(true)\n        } else {\n            setError(false)\n            setBtnDisable(true)\n            const result = await LoginService(form)\n            if (result.statusText === \"OK\") {\n                sessionStorage.setItem(\"crdt\",result.data.refresh)\n                const lastPath = sessionStorage.getItem('lastPath') || '/ventas' \n                dispatch(props.loginRequest(result.data));\n                props.history.replace('/ventas');\n            }else{\n                setErrorLogin(true)\n                setBtnDisable(false)\n            }   \n        }\n    }\n\n    useEffect(() => {\n        const themeColor = JSON.parse(localStorage.getItem(\"darkMode\"))\n        if (themeColor) {\n            document.body.classList.remove('is-light-mode')\n            document.body.classList.add('is-dark-mode')\n        }else{\n            document.body.classList.remove('is-dark-mode')\n            document.body.classList.add('is-light-mode')\n        }\n    }, [])\n\n    return (\n        <div className=\"container-login\">\n            <BtnDarkMode/>\n            <h1 className=\"logo-name\">SYNHO INVENTARIO</h1>\n            <div className=\"container-form-login\">\n                <h2>Iniciar la sesión</h2>\n                <hr style={{margin:\"15px 0px 35px\",borderColor:\"var(--gray)\"}}/>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Correo electrónico</label>\n                    <input \n                        type=\"text\" \n                        name=\"email\" \n                        placeholder=\"user@domain.com\" \n                        required={true}\n                        id=\"email\"\n                        onChange={updateInput}\n                    />\n                    <label htmlFor=\"password\">Contraseña</label>\n                    <input \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Introduzca su contraseña\"\n                        required={true}\n                        id=\"password\"\n                        onChange={updateInput}\n                    />\n\n                    { error && <p className=\"error\" >Completar los campos para iniciar sesión</p> }\n                    { errorLogin && <p className=\"error\" >Error al iniciar sesión, completar los campos correctamente</p> }\n\n                    <button \n                        className=\"inicia-sesion-login\" \n                        type=\"submit\"\n                        disabled={btnDisable}\n                    >\n                        Iniciar sesión\n                    </button>\n                </form>\n            </div>\n            <div className=\"copy-right\">Copyright © Synho {new Date().getFullYear()}</div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    loginRequest,\n};\n\nLogin.propTypes = {\n    loginRequest: PropTypes.func,\n};\n  \nexport default connect(null, mapDispatchToProps)(Login);","export const loginRequest = payload => ({\n    type: 'LOGIN_REQUEST',\n    payload,\n});\n\nexport const logoutRequest = payload => ({\n    type: 'LOGOUT_REQUEST',\n    payload,\n});","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BtnDarkMode from '../components/BtnDarkMode'\nimport '../assets/css/Header.css'\n\nconst Header = () => {\n    return (\n        <header>\n            <div className=\"logo-header\">SYNHO</div>\n            <div>\n                <BtnDarkMode/>\n            </div>\n            <nav className=\"container-nav-header\">\n                <Link to=\"/ventas\">Ventas</Link>\n                <Link to=\"/compras\">Compras</Link>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\n\nconst Layout = ({children}) => (\n    <div className=\"App\">\n        <Header/>\n        {children}\n        <Footer/>\n    </div>\n  );\n  \n\nexport default Layout\n","import axios from \"axios\";\nimport API_BASE_URL from \"../config/api\";\n\nexport const ShowCompras = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/purchases-records/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeDocument = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/document/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeRecipe = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/type-recipe/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowSupplier = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/supplier/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ChangeDolar = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/change-dolar-sunat/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data: \"\",\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const CreatePucharse = async (data) => {\n    const requestUrl = `${API_BASE_URL}/purchases/create/pucharse-record/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchByDatePucharse = async (desde, hasta) => {\n    const requestUrl = `${API_BASE_URL}/purchases/search/date/${desde}/${hasta}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchPucharse = async (date) => {\n    const requestUrl = `${API_BASE_URL}/purchases/search/look/${date}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const UnitiesPucharse = async () => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getPurcharseDetail = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/purchases/detail/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getUnitiesPurchase = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities-by-purchase/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getUnityDetail = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/detail/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const createUnityResponsable = async (data) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities-responsible/create/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const unitiesResponsableFilterView = async (id) => {\n    const requestUrl = `${API_BASE_URL}/purchases/unities/purchase/${id}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { getPurcharseDetail, getUnitiesPurchase } from '../services/compras';\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport { Link } from 'react-router-dom';\nimport '../assets/css/ComprasDetail.css'\n\nconst CompraDetail = (props) => {\n\n    const {id} = props.match.params;\n    const [myPurchase, setMyPurchase] = useState([])\n    const [myUnities, setMyUnities] = useState([])\n    const [isLoad, setIsLoad] = useState(false)\n\n    const getPurchase = async (myId) => {\n        const result = await getPurcharseDetail(myId);\n        if (result.statusText === \"OK\") {\n            setMyPurchase(result.data[0])\n            console.log(result.data[0]);\n            const result2 = await getUnitiesPurchase(myId);\n            if (result2.statusText === \"OK\") {\n                setMyUnities(result2.data)\n                setIsLoad(true)\n            }\n        }\n    }\n\n    useEffect(() => {\n        getPurchase(id)\n    }, [id])\n\n    return (\n        <div className=\"container-page\">\n        { isLoad \n            ?   <>\n                    <h1>Datos de compra</h1>\n                    <div className=\"contenedor-top-compras-detail\">\n                        <p><b>Fecha: </b>{myPurchase.date}</p>\n                        <p><b>Mes: </b>{myPurchase.month}</p>\n                        <p><b>Año: </b>{myPurchase.year}</p>\n                        <p><b>Document: </b>{myPurchase.document.document}</p>\n                        <p><b>Tipo: </b>{myPurchase.type_recipe.recipe}</p>\n                        <p><b>Numero: </b>{myPurchase.number}</p>\n                        <p><b>Serie: </b>{myPurchase.serie}</p>\n                        <p><b>Empresa: </b>{myPurchase.supplier.business_name}</p>\n                        <p><b>Ruc: </b>{myPurchase.supplier.ruc}</p>\n                        {myPurchase.change_type\n                            ?   <>\n                                    <p><b>Tipo de Cambio: </b>{myPurchase.change_type}</p>\n                                    <p><b>Base Imponible (dolares): </b>{myPurchase.tax_base_dolar}</p>         \n                                    <p><b>IGV (soles): </b>{myPurchase.tb_igv_dolar}</p>\n                                    <p><b>Total (soles): </b>{myPurchase.tb_total_dolar}</p>\n                                </>\n                            :   <>\n                                    <p><b>Base Imponible (soles): </b>{myPurchase.tax_base}</p>            \n                                    <p><b>IGV (soles): </b>{myPurchase.tb_igv}</p>\n                                    <p><b>Total (soles): </b>{myPurchase.tb_total}</p>\n                                </>\n                        }\n                    </div>\n                    <h2>Unidades de Compra</h2>\n                    {myUnities.map((uni) => {\n                        return(\n                            <table key={uni.id}  className=\"tabla-ventas\">\n                                <tr>\n                                    <th>Código de Producto</th>\n                                    <th>Nombre del Producto</th>\n                                    <th>Tipo</th>\n                                    <th>Precio S/ (Inc. IGV)</th>\n                                    <th>Precio us$ (Inc IGV)</th>\n                                    <th>Fecha de Compra</th>\n                                    <th>Nombre de Proveedor</th>\n                                    <th>Ultimo Responsable</th>\n                                    <th>Disponible</th>\n                                </tr>\n                                <tr>\n                                    <td><Link to={`/compras/unities/detail/${uni.id}`}>{uni.code}</Link></td>\n                                    <td>{uni.description}</td>\n                                    <td>{uni.typeOfUnity.title}</td>\n                                    <td>{uni.moneda === \"soles\" ? uni.price * 118 / 100 : \"-------\"}</td>\n                                    <td>{uni.moneda === \"dolares\" ? uni.price * 118 / 100 : \"-------\"}</td>\n                                    <td>{uni.date}</td>\n                                    <td>{uni.purchase.supplier.business_name}</td>\n                                    <td>{uni.responsable ? uni.responsable : \"---------\"}</td>\n                                    <td>{uni.available \n                                        ? <FaCheckCircle className=\"check-available\"/>\n                                        : <RiCloseCircleFill className=\"non-available\"/>\n                                    }</td>\n                                </tr>\n                            </table>\n                        )\n                    })}\n                </>\n            : <div>Cargando ...</div>\n        }\n        </div>\n    )\n}\n\nexport default CompraDetail\n","import React, { useEffect, useState } from 'react'\nimport { SearchByDatePucharse, SearchPucharse, ShowCompras } from '../services/compras';\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport { RiFileAddLine } from 'react-icons/ri'\nimport { Link } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport '../assets/css/Ventas.css'\n\nconst Compras = () => {\n\n    const [compras, setCompras] = useState([])\n    const [dateStart, setDateStart] = useState(\"\")\n    const [dateEnd, setDateEnd] = useState(\"\")\n    const [total, setTotal] = useState(0)\n    const [totalRegister, setTotalRegister] = useState(0)\n\n    const funcSumTotal = async (c) => {\n        let sumTotal = 0\n        for (let i = 0; i < c.length; i++) {\n            const element = c[i];\n            sumTotal += element.tb_total\n            sumTotal += element.tb_total_dolar\n        }\n        sumTotal = parseInt(sumTotal * 1000) / 1000\n        setTotal(sumTotal)\n        setTotalRegister(c.length)\n    }   \n \n    const getCompras = async () => {\n        const result = await ShowCompras()\n        if (result.statusText === \"OK\") {\n            setCompras(result.data)\n        }else{\n            setCompras([])\n        }\n    }\n\n    const filterDate = async (desde, hasta) => {\n        if (desde !== \"\" && hasta !== \"\") {\n            const d = new Date(dateStart.target.value).toISOString().slice(0,10)\n            const h = new Date(dateEnd.target.value).toISOString().slice(0,10)\n            const result = await SearchByDatePucharse(d, h);\n            if (result.statusText === \"OK\") {\n                setCompras(result.data)\n            }else{\n                setCompras([])\n            }\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const search = event.target.search_compra.value;\n        if (search !== \"\") {\n            const result = await SearchPucharse(search);\n            if (result.statusText === \"OK\") {\n                setCompras(result.data)\n            }else{\n                setCompras([])\n            }\n        }else{\n            getCompras()\n        }\n    }\n\n    useEffect(() => {\n        filterDate(dateStart, dateEnd)\n    }, [dateStart, dateEnd])\n\n    useEffect(() => {\n        getCompras()\n    }, [])\n\n    useEffect(() => {\n        funcSumTotal(compras)\n    }, [compras])\n\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de compras </h1>\n            </div>\n\n            <div className=\"container-all-filters\">\n                <form className=\"container-search-filter\" onSubmit={onSubmit}>\n                    <label htmlFor=\"search_compra\">\n                        Buscar: <br />\n                        <div className=\"container-input-search\">\n                            <input type=\"search\" name=\"search_compra\" id=\"search_compra\" />\n                            <button type=\"submit\"><ImSearch/></button>\n                        </div>\n                    </label>\n                </form>\n                <div className=\"container-filter-by-date\">\n                    <label htmlFor=\"fecha_desde\">\n                        Desde: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_desde\" \n                            id=\"fecha_desde\" \n                            onChange={setDateStart}\n                        />\n                    </label>\n                    \n                    <label htmlFor=\"fecha_hasta\">\n                        Hasta: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_hasta\" \n                            id=\"fecha_hasta\" \n                            onChange={setDateEnd}\n                        />\n                    </label>\n                </div>\n                <div className=\"container-save-add\">\n                    <Link className=\"btn-list-detail-unities\" to=\"/compras/unities/all\">\n                        <CgDetailsMore/>\n                    </Link>\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_compras\"\n                        filename={`registro-de-compras ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    />\n                    <Link to=\"/compras/add\">\n                        <RiFileAddLine/> Agregar\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"container-total-data\">\n                <div>\n                    <h4>Total de registros:</h4>\n                    <div>{totalRegister}</div>\n                </div>\n                <div>\n                    <h4>Total de gastos en compra:</h4>\n                    <div>S/ {total}</div>\n                </div>\n            </div>\n\n            <table className=\"tabla-ventas\" id=\"tabla_compras\">\n                <tr>\n                    <th>NUMERO DEL REGISTRO O CODIGO UNICO DE OPERACION</th>\n                    <th>FECHA DE EMISION</th>\n                    <th>TIPO</th>\n                    <th>SERIE O CDA</th>\n                    <th>NUMERO</th>\n\n                    <th>TIPO</th>\n                    <th>NUMERO</th>\n                    <th>APELLIDOS Y NOMBRES O RAZON SOCIAL</th>\n\n                    <th>BASE IMPONIBLE / OPERACION GRAVADA (soles)</th>\n                    <th>IGV (soles)</th>\n\n                    <th>VALOR DE LAS ADQUISIC: OPERACIÓN  NO GRAVADA  /OPERACIÓN INAFECTA</th>\n                    <th>OTROS TRIBUTOS Y CARGOS (dolares)</th>\n                    <th>IMPORTE TOTAL (soles)</th>\n                    <th>TIPO DE CAMBIO</th>\n                </tr>\n                {compras.map((v) => {\n                    return(\n                        <tr key={v.id}>\n                            <td style={{width: \"30px\"}}><Link to={`/compras/detail/${v.id}`}>{v.id}</Link></td>\n                            <td>{v.date}</td>\n                            <td>{v.document.number}</td>\n                            <td>{v.serie}</td>\n                            <td>{v.number}</td>\n                            \n                            <td>{v.type_recipe.number}</td>\n                            <td style={{width: \"120px\"}}>{v.supplier.ruc}</td>\n                            <td style={{width: \"400px\"}}>{v.supplier.business_name}</td>\n                            \n                            <td style={{width: \"100px\"}}>{v.tax_base}</td>\n                            <td>{v.tb_igv}</td>\n                                \n                            <td style={{width: \"150px\"}}>{v.tb_total}</td>\n                            <td>{v.tax_base_dolar}</td>\n                            <td>{v.tb_total_dolar}</td>\n                            <td>{v.change_type}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default Compras\n","import axios from \"axios\";\n\nexport const getRuc = async (ruc) => {\n    const requestUrl = `https://dniruc.apisperu.com/api/v1/ruc/${ruc}?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImJyeWFuamVzdXMucmFAZ21haWwuY29tIn0.q45fnl_Avj4zVfqCocwBR6qUt-uGP6fmANWoF-n4tsI`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { ChangeDolar, CreatePucharse, ShowTypeDocument, ShowTypeRecipe } from '../services/compras';\nimport DatePicker from 'react-date-picker';\nimport { getRuc } from '../services/externalApis';\nimport '../assets/css/VentasAdd.css'\n\nconst ComprasAdd = (props) => {\n\n    const [value, setValue] = useState(new Date());\n    const [typeDoc, setTypeDoc] = useState([])\n    const [typeRecipe, setTypeRecipe] = useState([]);\n    const [ruc, setRuc] = useState(\"\");\n    const [razonSocial, setRazonSocial] = useState(\"\")\n    const [solesDolars, setSolesDolars] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [totalSoles, setTotalSoles] = useState(0)\n    const [totalDolares, setTotalDolares] = useState(0)\n    const [valueDolar, setValueDolar] = useState(0)\n    const [ctdIGVSoles, setCtdIGVSoles] = useState(0)\n    const [ctdIGVDolar, setctdIGVDolar] = useState(0)\n    const [priceTotal, setPriceTotal] = useState(0)\n    const [priceMoment, setPriceMoment] = useState(0)\n    const [priceCapture, setPriceCapture] = useState(0)\n    const [priceTotalConvertido, setPriceTotalConvertido] = useState(0)\n\n    let codes = []\n    const codeyear = (new Date().getFullYear() + \" \").slice(2,4)\n    let codeMonth = new Date().getMonth() + 1\n    let codeDay\n    if (codeMonth < 10) {\n        codeMonth = `0${codeMonth}`\n    }\n    if (parseInt(new Date().getDate()) < 10) {\n        codeDay = `0${new Date().getDate()}`\n    } else {\n        codeDay = new Date().getDate()\n    }\n    const codeDate = codeyear + codeMonth + codeDay\n    for (let i = 1; i <= 20; i++) { \n        if (i < 10) {\n            codes.push(codeDate + '-' + `000${i}`)\n        } else {\n            codes.push(codeDate + '-' + `00${i}`)            \n        }\n    }\n\n    const updateInput = (monto) => {\n        if (monto !== NaN) {\n            const total = parseInt(monto * 1000) / 1000 * 118 / 100\n            setCtdIGVSoles(parseInt((total - monto) * 1000) / 1000)\n            setTotalSoles(total)\n        }else{\n            const total = 0\n            setTotalSoles(total)\n            setCtdIGVSoles(total)\n        }            \n    };\n\n    const updateInput2 = (monto) => {\n        if (monto !== NaN) {\n            const total = parseInt(monto * 1000) / 1000 * 118 / 100 * (parseInt(parseFloat(valueDolar) * 1000) / 1000)\n            const convertido = parseInt(monto * 1000) / 1000 * (parseInt(parseFloat(valueDolar) * 1000) / 1000)\n            setPriceTotalConvertido(convertido)\n            setctdIGVDolar(parseInt((total - convertido) * 1000) / 1000)\n            setTotalDolares(total)\n        }else{\n            const total = 0\n            setPriceTotalConvertido(total)\n            setTotalDolares(total)\n            setctdIGVDolar(total)\n        }\n    };\n\n    const getTypeDocument = async () => {\n        const result = await ShowTypeDocument()\n        setTypeDoc(result.data)\n    }\n\n    const getTypeRecipe = async () => {\n        const result = await ShowTypeRecipe()\n        setTypeRecipe(result.data)\n    }\n\n    const getMyChangeDolar = async () => {\n        const result = await ChangeDolar()\n        setValueDolar(result.data.venta);\n    }\n\n    const getSupplier = async (ruc) => {\n        const result = await getRuc(ruc)\n        if (result.data) {\n            setRazonSocial(result.data.razonSocial)\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let ur = document.getElementsByClassName(\"unity-register\")\n        let unities = []\n        let myError = false\n        \n        for (let i = 0; i < 20; i++) {\n            const element = ur[i];\n            let code\n            let description\n            let cuantity\n            let typeOfUnity\n            let price\n\n            if (element.childNodes.item(0).childNodes.item(0).value === \"\") {\n                continue\n            } else {\n                code = element.childNodes.item(0).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(1).childNodes.item(0).value === \"\") {\n                continue\n            } else {\n                description = element.childNodes.item(1).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(2).childNodes.item(0).value === \"\") {\n                setError(true)\n                myError = true\n                continue\n            } else {\n                cuantity = element.childNodes.item(2).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(3).childNodes.item(0).value === \"\") {\n                setError(true)\n                myError = true\n                continue\n            } else {\n                typeOfUnity = element.childNodes.item(3).childNodes.item(0).value\n            }\n\n            if (element.childNodes.item(4).childNodes.item(0).value === \"\") {\n                setError(true)\n                myError = true\n                continue\n            } else {\n                price = element.childNodes.item(4).childNodes.item(0).value\n            }\n            const unity = {\n                code,\n                description,\n                cuantity,\n                price,\n                typeOfUnity,\n            }\n            unities.push(unity)\n        }\n        console.log(unities);\n        // generals data\n        let data = {}\n        switch (solesDolars) {\n            case \"soles\":\n                data = {\n                    unities,\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number_recipe.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base:       parseFloat(event.target.tax_base.value),\n                    tb_igv:         parseFloat(event.target.tb_igv.value),\n                    tb_total:       parseFloat(event.target.tb_total.value),\n                    business_name:  razonSocial,\n                    moneda:         solesDolars,\n                    tax_base_dolar: null,\n                    change_type:    null,\n                    tb_igv_dolar:   null,\n                    tb_total_dolar: null,\n                }\n                break;\n            case \"dolares\":\n                data = {\n                    unities,\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number_recipe.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base_dolar: parseFloat(event.target.tax_base_dolar.value),\n                    change_type:    parseFloat(event.target.change_type.value),\n                    tb_igv_dolar:   parseFloat(event.target.tb_igv_dolar.value),\n                    tb_total_dolar: parseFloat(event.target.tb_total_dolar.value),\n                    business_name:  razonSocial,\n                    moneda:         solesDolars,\n                    tax_base:       null,\n                    tb_igv:         null,\n                    tb_total:       null,\n                }\n                break;\n            default:\n                setError(true)\n                break;\n        }\n        console.log(!myError);\n        if (!myError) {\n            const result = await CreatePucharse(data)\n            if (result.statusText === \"OK\") {\n                props.history.push(\"/compras\")\n            } else {\n                setError(true)\n            }            \n        }\n    }\n\n    useEffect(() => {\n        updateInput(priceTotal)\n    }, [priceTotal])\n\n    useEffect(() => {\n        updateInput2(priceTotal)\n    }, [priceTotal])\n\n    useEffect(() => {\n        getSupplier(ruc)\n    }, [ruc])\n\n    useEffect(() => {\n        getTypeDocument()\n    }, [])\n\n    useEffect(() => {\n        getTypeRecipe()\n    }, [])\n\n    useEffect(() => {\n        getMyChangeDolar()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <h1>Agregar Compra</h1>\n            <form className=\"form-add-venta\" onSubmit={onSubmit} >\n                <div className=\"form-1-add-venta\">\n                    <label htmlFor=\"mes_registro\">\n                        MES DE REGISTRO: &nbsp;\n                        <select name=\"month\" id=\"mes_registro\">\n                            <option value=\"\">-------------------</option>\n                            <option value=\"Enero\">Enero</option>\n                            <option value=\"Febrero\">Febrero</option>\n                            <option value=\"Marzo\">Marzo</option>\n                            <option value=\"Abril\">Abril</option>\n                            <option value=\"Mayo\">Mayo</option>\n                            <option value=\"Junio\">Junio</option>\n                            <option value=\"Julio\">Julio</option>\n                            <option value=\"Agosto\">Agosto</option>\n                            <option value=\"Setiembre\">Setiembre</option>\n                            <option value=\"Octubre\">Octubre</option>\n                            <option value=\"Noviembre\">Noviembre</option>\n                            <option value=\"Diciembre\">Diciembre</option>\n                        </select>\n                    </label>\n                    <label htmlFor=\"year\">\n                        AÑO DE REGISTRO: &nbsp;\n                        <input \n                            type=\"number\" \n                            name=\"year\" \n                            id=\"year\" \n                            style={{width:\"80px\"}}\n                            defaultValue={new Date().getFullYear()} \n                        />\n                    </label>\n                </div>\n\n                <p>COMPROBANTE DE PAGO O DOCUMENTO:</p>\n\n                <div className=\"form-2-add-venta\">\n                    <label htmlFor=\"fecha_emision\">\n                        FECHA DE EMISION: <br/>\n                        <DatePicker\n                            id=\"fecha_emision\"\n                            className=\"fecha_emision\"\n                            onChange={setValue}\n                            name=\"date\"\n                            value={value}\n                        />\n                    </label>\n                    <label htmlFor=\"document\">\n                        TIPO DE DOCUMENTO: <br />\n                        <select name=\"document\" id=\"document\">\n                            <option value=\"\">----------------------</option>\n                            {typeDoc.map((t) => <option key={t.id} value={t.document}>{t.document}</option>)}\n                        </select>\n                    </label>\n                    <label htmlFor=\"serie\">\n                        SERIE: <br />\n                        <input type=\"text\" name=\"serie\" id=\"serie\" />\n                    </label>\n                    <label htmlFor=\"number_recipe\">\n                        NÚMERO: <br />\n                        <input type=\"number\" name=\"number_recipe\" id=\"number_recipe\" />\n                    </label>\n                    <label htmlFor=\"recipe\">\n                        TIPO: <br />\n                        <select name=\"recipe\" id=\"recipe\">\n                            <option value=\"\">---------------</option>\n                            {typeRecipe.map((t) => <option key={t.id} value={t.recipe}>{t.recipe}</option>)}\n                        </select>\n                    </label>\n                </div>\n\n                <p>INFORMACION DEL PROVEEDOR:</p>\n\n                <div className=\"form-2-add-venta\">\n                    <label htmlFor=\"ruc\">\n                        RUC DEL PROVEEDOR: <br />\n                        <input \n                            type=\"number\" \n                            name=\"ruc\" \n                            id=\"ruc\" \n                            max=\"999999999999\"\n                            className=\"ruc-provedor-form\"\n                            onChange={(event) => setRuc(event.target.value)}\n                        />\n                    </label>\n                    <label htmlFor=\"razon_social\">\n                        NOMBRE O RAZÓN SOCIAL: <br />\n                        <input \n                            type=\"text\" \n                            name=\"business_name\"\n                            className=\"razon-social-form\"\n                            value={razonSocial}\n                            disabled={\"true\"}\n                        />\n                    </label>\n                </div>\n\n                <hr />\n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"1\" \n                        value=\"1\" \n                        onChange={() => setSolesDolars(\"soles\")}\n                    />&nbsp;\n                    IMPONIBLE EN SOLES \n                </p>\n                \n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"2\" \n                        value=\"2\" \n                        onChange={() => setSolesDolars(\"dolares\")}\n                    />&nbsp;\n                    IMPONIBLE EN DOLARES: \n                </p>\n\n                {solesDolars !== \"\" &&\n                    <table className=\"tabla-ventas\" id=\"tabla_compras\">\n                        <tr>\n                            <th>Código</th>\n                            <th>Descripción</th>\n                            <th>Cantidad</th>\n                            <th>Tipo</th>\n                            <th>{`Precio(sin IGV) en ${solesDolars}`}</th>\n                        </tr>\n                        {codes.map((c) => {\n                            return (\n                                <tr className=\"unity-register\">\n                                    <td><input type=\"text\" name=\"code\" value={c} disabled={true}/></td>\n                                    <td><input type=\"text\" name=\"description\"/></td>\n                                    <td><input type=\"text\" name=\"cuantity\"/></td>\n                                    <td>\n                                        <select name=\"typeOfUnity\">\n                                            <option value=\"\">---------------</option>\n                                            <option value=\"Herramientas\">Herramientas</option>\n                                            <option value=\"Consumibles\">Consumibles</option>\n                                            <option value=\"Maquinarias\">Maquinarias</option>\n                                            <option value=\"Equipo\">Equipo</option>\n                                            <option value=\"Servicio\">Servicio</option>\n                                            <option value=\"Alimentos\">Alimentos</option>\n                                            <option value=\"EPPs\">EPPs</option>\n                                        </select>\n                                    </td>\n                                    <td>\n                                        <input \n                                            type=\"number\" \n                                            name=\"price\" \n                                            step=\"0.001\"\n                                            onFocus={(event) => {\n                                                if (event.target.value !== \"\") {\n                                                    setPriceCapture(parseFloat(event.target.value))\n                                                }\n                                            }}\n                                            onBlur={() => {\n                                                setPriceTotal(priceTotal + priceMoment - priceCapture)\n                                                setPriceMoment(0)\n                                                setPriceCapture(0)\n                                            }} \n                                            onChange={(event) => {\n                                                if (event.target.value !== \"\") {\n                                                    setPriceMoment(parseFloat(event.target.value))\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </table>\n                }\n\n                {solesDolars === \"soles\" &&\n                    <div className=\"form-3-add-venta\">\n                        <label htmlFor=\"tax_base\">\n                            BASE IMPONIBLE TOTAL(en soles):\n                            <input type=\"number\" name=\"tax_base\" id=\"tax_base\" value={priceTotal} disabled={\"true\"}  />\n                        </label>\n                        <label htmlFor=\"tb_igv\">\n                            IGV:\n                            <input type=\"number\" name=\"tb_igv\" id=\"tb_igv\" value={ctdIGVSoles} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total\">\n                            TOTAL:\n                            <input type=\"number\" name=\"tb_total\" id=\"tb_total\" value={totalSoles} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n                \n                {solesDolars === \"dolares\" &&\n                    <div className=\"form-4-add-venta\">\n                        <label htmlFor=\"tax_base_dolar\">\n                            BASE IMPONIBLE TOTAL(en dolares):\n                            <input type=\"number\" name=\"tax_base_dolar\" id=\"tax_base_dolar\" value={priceTotal} disabled={\"true\"}/>\n                        </label>\n                        <label htmlFor=\"change_type\">\n                            TIPO DE CAMBIO:\n                            <input type=\"number\" name=\"change_type\" id=\"change_type\" value={valueDolar} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tax_base\">\n                            BASE IMPONIBLE TOTAL(en soles):\n                            <input type=\"number\" name=\"tax_base\" id=\"tax_base\" value={priceTotalConvertido} disabled={\"true\"}  />\n                        </label>\n                        <label htmlFor=\"tb_igv_dolar\">\n                            IGV:\n                            <input type=\"number\" name=\"tb_igv_dolar\" id=\"tb_igv_dolar\" value={ctdIGVDolar} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total_dolar\">\n                            TOTAL:\n                            <input type=\"number\" name=\"tb_total_dolar\" id=\"tb_total_dolar\" value={totalDolares} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n\n                <hr />\n                {error &&\n                    <p className=\"error\">Completar todos los campos correctamente</p>\n                }\n                <button type=\"submit\">Agregar compra</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ComprasAdd\n","import React from 'react'\nimport '../assets/css/Home.css'\n\nconst Home = () => {\n    return (\n        <main className=\"container-page\">\n            screen home\n        </main>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            ERROR 404\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { useEffect, useState } from 'react'\nimport { UnitiesPucharse } from '../services/compras'\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport '../assets/css/UnidadesCompra.css'\nimport { Link } from 'react-router-dom'\n\nconst UnidadesCompra = () => {\n\n    const [unities, setUnities] = useState([])\n\n    const getUnities = async () => {\n        const result = await UnitiesPucharse();\n        setUnities(result.data)\n        console.log(result.data);\n    }\n\n    useEffect(() => {\n        getUnities()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de Productos de Compra </h1>\n            </div>\n            <table className=\"tabla-ventas\">\n                <tr>\n                    <th>Código de Producto</th>\n                    <th>Nombre del Producto</th>\n                    <th>Tipo</th>\n                    <th>Precio S/ (Inc. IGV)</th>\n                    <th>Precio us$ (Inc IGV)</th>\n                    <th>Fecha de Compra</th>\n                    <th>Nombre de Proveedor</th>\n                    <th>Ultimo Responsable</th>\n                    <th>Disponible</th>\n                </tr>\n                {unities.map((u) => {\n                    return(\n                        <tr key={u.id}>\n                            <td><Link to={`/compras/unities/detail/${u.id}`}>{u.code}</Link></td>\n                            <td>{u.description}</td>\n                            <td>{u.typeOfUnity.title}</td>\n                            <td>{u.moneda === \"soles\" ? u.price * 118 / 100 : \"-------\"}</td>\n                            <td>{u.moneda === \"dolares\" ? u.price * 118 / 100 : \"-------\"}</td>\n                            <td>{u.date}</td>\n                            <td>{u.purchase.supplier.business_name}</td>\n                            <td>{u.responsable ? u.responsable : \"---------\"}</td>\n                            <td>{u.available \n                                ? <FaCheckCircle className=\"check-available\"/>\n                                : <RiCloseCircleFill className=\"non-available\"/>\n                            }</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default UnidadesCompra\n","import React, { useEffect, useState } from 'react'\nimport { createUnityResponsable, getUnityDetail, unitiesResponsableFilterView } from '../services/compras'\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport { IoCloseCircle } from 'react-icons/io5'\nimport '../assets/css/UnidadesCompraDetail.css'\nimport { AllUsers } from '../services/userServices'\n\nconst UnidadesCompraDetail = (props) => {\n\n    const {id} = props.match.params;\n    const [unity, setUnity] = useState([])\n    const [responsables, setResponsables] = useState([])\n    const [isLoad, setIsLoad] = useState(false)\n    const [isOpen, setisOpen] = useState(false)\n    const [allUsers, setAllUsers] = useState([])\n\n    const getMyUnity = async (myId) => {\n        const result = await getUnityDetail(myId)\n        if (result.statusText == \"OK\") {\n            setUnity(result.data[0]);      \n            const result2 = await unitiesResponsableFilterView(myId)\n            setResponsables(result2.data);    \n            setIsLoad(true)\n        }\n    }\n\n    const getAllUsers = async () => {\n        const result = await AllUsers();\n        setAllUsers(result.data)\n    }\n\n    const openModal = async () => {\n        setisOpen(true)\n    }\n\n    const closeModal = async () => {\n        setisOpen(false)\n    }\n\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        const data = {\n            unity: unity.id,\n            date: event.target.date.value,\n            available: unity.available,\n            reason: event.target.reason.value,\n            responsable: parseInt(event.target.responsable.value),\n            state: event.target.state.value,\n        }\n        const result = await createUnityResponsable(data);\n        if (result.statusText === \"OK\") {\n            getMyUnity(id)            \n        }\n        setisOpen(false)\n    }\n\n    useEffect(() => {\n        getMyUnity(id)\n    }, [id])\n\n    useEffect(() => {\n        getAllUsers()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <h1>Datos del Producto Detalle</h1>\n            {unity.available \n                ? <button onClick={openModal} className=\"btn-avaiable-product\">Retirar</button>\n                : <button onClick={openModal} className=\"btn-avaiable-product\">Devolver</button>\n            }\n            {isLoad \n                ?   <div className=\"container-top-unities-detail\">\n                        <p><b>Codigo: </b>{unity.code}</p>\n                        <p><b>Fecha: </b>{unity.date}</p>\n                        <p><b>Titulo: </b>{unity.description}</p>\n                        <p><b>Precio: </b>{unity.moneda === \"soles\" ? \"S/\" : \"$\"} {unity.price}</p>\n                        <p><b>Razon Social: </b>{unity.purchase.supplier.business_name}</p>\n                        <p><b>Ruc: </b>{unity.purchase.supplier.ruc}</p>\n                        <p><b>Tipo: </b>{unity.typeOfUnity.title}</p>\n                        <p><b>Disponible: </b>{unity.available \n                            ? <FaCheckCircle className=\"check-available\"/>\n                            : <RiCloseCircleFill className=\"non-available\"/>\n                        }</p>\n                    </div>  \n                :   \"Cargando...\"\n            }\n            <h2>Historial del producto:</h2>\n            <table className=\"tabla-ventas\">\n                <tr>\n                    <th>Fecha</th>\n                    <th>Accion</th>\n                    <th>Motivo</th>\n                    <th>Responsable</th>\n                    <th>Estado</th>\n                </tr>\n                {responsables.map((r) => {\n                    return(\n                        <tr>\n                            <td>{r.date}</td>\n                            <td>{r.available \n                                    ? <span className=\"retiro-product\">Retiro</span>\n                                    : <span className=\"devolucion-product\">Devolucion</span>\n                            }</td>\n                            <td>{r.reason}</td>\n                            <td>{r.responsable.first_name} {r.responsable.last_name}</td>\n                            <td>{r.state}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n            {isOpen\n                ?   <div className=\"container-modal-product\">\n                        <div className=\"container-content-modal-product\">\n                            <div className=\"btn-close-modal-product\">\n                                <IoCloseCircle onClick={closeModal}/>\n                            </div>\n                            <h3>Formulario de {unity.available ? \"Retiro\" : \"Devolucion\"}</h3>\n                            <form onSubmit={onSubmit} className=\"content-modal-product\">\n                                <label htmlFor=\"date\">Fecha: </label>&nbsp;\n                                <input type=\"date\" name=\"date\" id=\"date\" /><br />\n                                <label htmlFor=\"reason\">Motivo: </label><br />\n                                <textarea name=\"reason\" id=\"reason\"></textarea><br />\n                                <label htmlFor=\"responsable\">Responsable: </label>&nbsp;\n                                <select name=\"responsable\" id=\"responsable\">\n                                    <option value=\"\">-------------------------------</option>\n                                    {allUsers.map((u) => {\n                                        return(\n                                            <option key={u.id} value={u.id}>{u.first_name} {u.last_name}</option>\n                                        )\n                                    })}\n                                </select><br />\n                                <label htmlFor=\"state\">Estado: </label><br />\n                                <input type=\"text\" name=\"state\" id=\"state\"/>\n                                <button type=\"submit\">Enviar</button>\n                            </form>\n                        </div>\n                    </div>\n                : null\n            }\n        </div>\n    )\n}\n\nexport default UnidadesCompraDetail\n","import React from 'react'\n\nconst UnidadesVenta = () => {\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de Productos de Venta </h1>\n            </div>\n        </div>\n    )\n}\n\nexport default UnidadesVenta\n","import axios from \"axios\";\nimport API_BASE_URL from \"../config/api\";\n\nexport const ShowVentas = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/sales-records/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeDocument = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/document/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowTypeRecipe = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/type-recipe/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ShowSupplier = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/supplier/all/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const ChangeDolar = async () => {\n    const requestUrl = `${API_BASE_URL}/sales/change-dolar-sunat/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data: \"\",\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const CreateSale = async (data) => {\n    const requestUrl = `${API_BASE_URL}/sales/create/sale-record/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'post',\n            data,\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchByDateSale = async (desde, hasta) => {\n    const requestUrl = `${API_BASE_URL}/sales/search/date/${desde}/${hasta}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const SearchSale = async (data) => {\n    const requestUrl = `${API_BASE_URL}/sales/search/look/${data}/`;\n\n    try {\n        const resp = await axios({\n            url: requestUrl,\n            method: 'get',\n        });\n        if (resp.status === 200 || 201) {\n            return resp\n        }\n    } catch (error) {\n        return false\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { SearchByDateSale, SearchSale, ShowVentas } from '../services/ventas';\nimport ReactHTMLTabletToExcel from 'react-html-table-to-excel';\nimport { SiMicrosoftexcel } from 'react-icons/si'\nimport { RiFileAddLine } from 'react-icons/ri'\nimport { Link } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport '../assets/css/Ventas.css'\n\nconst Ventas = () => {\n\n    const [ventas, setVentas] = useState([])\n    const [dateStart, setDateStart] = useState(\"\")\n    const [dateEnd, setDateEnd] = useState(\"\")\n    const [total, setTotal] = useState(0)\n    const [totalRegister, setTotalRegister] = useState(0)\n\n    const funcSumTotal = async (c) => {\n        let sumTotal = 0\n        for (let i = 0; i < c.length; i++) {\n            const element = c[i];\n            sumTotal += element.tb_total\n            sumTotal += element.tb_total_dolar\n        }\n        sumTotal = parseInt(sumTotal * 1000) / 1000\n        setTotal(sumTotal)\n        setTotalRegister(c.length)\n    }   \n\n    const getVentas = async () => {\n        const result = await ShowVentas()\n        if (result.statusText === \"OK\") {\n            setVentas(result.data)\n        }else{\n            setVentas([])\n        }\n    }\n\n    const filterDate = async (desde, hasta) => {\n        if (desde !== \"\" && hasta !== \"\") {\n            const d = new Date(dateStart.target.value).toISOString().slice(0,10)\n            const h = new Date(dateEnd.target.value).toISOString().slice(0,10)\n            const result = await SearchByDateSale(d, h);\n            if (result.statusText === \"OK\") {\n                setVentas(result.data)\n            }else{\n                setVentas([])\n            }    \n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const search = event.target.search_compra.value;\n        if (search !== \"\") {\n            const result = await SearchSale(search);\n            if (result.statusText === \"OK\") {\n                setVentas(result.data)\n            }else{\n                setVentas([])\n            }\n        }else{\n            getVentas()\n        }\n    }\n\n    useEffect(() => {\n        filterDate(dateStart, dateEnd)\n    }, [dateStart, dateEnd])\n\n    useEffect(() => {\n        getVentas()\n    }, [])\n\n    useEffect(() => {\n        funcSumTotal(ventas)\n    }, [ventas])\n\n    return (\n        <div className=\"container-page\">\n            <div className=\"container-title-operations\">\n                <h1>Registro de Ventas </h1>\n            </div>\n\n            <div className=\"container-all-filters\">\n                <form className=\"container-search-filter\" onSubmit={onSubmit}>\n                    <label htmlFor=\"search_compra\">\n                        Buscar: <br />\n                        <div className=\"container-input-search\">\n                            <input type=\"search\" name=\"search_compra\" id=\"search_compra\" />\n                            <button type=\"submit\"><ImSearch/></button>\n                        </div>\n                    </label>\n                </form>\n                <div className=\"container-filter-by-date\">\n                    <label htmlFor=\"fecha_desde\">\n                        Desde: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_desde\" \n                            id=\"fecha_desde\" \n                            onChange={setDateStart}\n                        />\n                    </label>\n                    \n                    <label htmlFor=\"fecha_hasta\">\n                        Hasta: <br />\n                        <input \n                            type=\"date\" \n                            name=\"fecha_hasta\" \n                            id=\"fecha_hasta\" \n                            onChange={setDateEnd}\n                        />\n                    </label>\n                </div>\n                <div className=\"container-save-add\">\n                    <Link className=\"btn-list-detail-unities\" to=\"/ventas/unities/all\">\n                        <CgDetailsMore/>\n                    </Link>\n                    <ReactHTMLTabletToExcel\n                        id=\"botonExportarExcel\"\n                        table=\"tabla_compras\"\n                        filename={`registro-de-compras ${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()} `}\n                        sheet=\"pagina 1\"\n                        buttonText={<SiMicrosoftexcel/>}\n                    />\n                    <Link to=\"/ventas/add\">\n                        <RiFileAddLine/> Agregar\n                    </Link>\n                </div>\n            </div>\n            \n            <div className=\"container-total-data\">\n                <div>\n                    <h4>Total de registros:</h4>\n                    <div>{totalRegister}</div>\n                </div>\n                <div>\n                    <h4>Total de gastos en compra:</h4>\n                    <div>S/ {total}</div>\n                </div>\n            </div>\n\n            <table className=\"tabla-ventas\" id=\"tabla_ventas\">\n                <tr>\n                    <th>NUMERO DEL REGISTRO O CODIGO UNICO DE OPERACION</th>\n                    <th>FECHA DE EMISION</th>\n                    <th>TIPO</th>\n                    <th>SERIE O CDA</th>\n                    <th>NUMERO</th>\n\n                    <th>TIPO</th>\n                    <th>NUMERO</th>\n                    <th>APELLIDOS Y NOMBRES O RAZON SOCIAL</th>\n\n                    <th>BASE IMPONIBLE / OPERACION GRAVADA (soles)</th>\n                    <th>IGV (soles)</th>\n\n                    <th>VALOR DE LAS ADQUISIC: OPERACIÓN  NO GRAVADA  /OPERACIÓN INAFECTA</th>\n                    <th>OTROS TRIBUTOS Y CARGOS</th>\n                    <th>IMPORTE TOTAL (soles)</th>\n                    <th>TIPO DE CAMBIO</th>\n                </tr>\n                {ventas.map((v,index) => {\n                    return(\n                        <tr key={v.id}>\n                            <td style={{width: \"30px\"}}>{v.id}</td>\n                            <td>{v.date}</td>\n                            <td>{v.document.number}</td>\n                            <td>{v.serie}</td>\n                            <td>{v.number}</td>\n                            \n                            <td>{v.type_recipe.number}</td>\n                            <td style={{width: \"120px\"}}>{v.supplier.ruc}</td>\n                            <td style={{width: \"400px\"}}>{v.supplier.business_name}</td>\n                            \n                            <td style={{width: \"100px\"}}>{v.tax_base}</td>\n                            <td>{v.tb_igv}</td>\n                                \n                            <td style={{width: \"150px\"}}>{v.tb_total}</td>\n                            <td>{v.tax_base_dolar}</td>\n                            <td>{v.tb_total_dolar}</td>\n                            <td>{v.change_type}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default Ventas\n","import React, { useEffect, useState } from 'react'\nimport { ChangeDolar, CreateSale, ShowTypeDocument, ShowTypeRecipe } from '../services/ventas';\nimport DatePicker from 'react-date-picker';\nimport '../assets/css/VentasAdd.css'\nimport { getRuc } from '../services/externalApis';\n\nconst VentasAdd = (props) => {\n\n    const [value, setValue] = useState(new Date());\n    const [typeDoc, setTypeDoc] = useState([])\n    const [typeRecipe, setTypeRecipe] = useState([]);\n    const [ruc, setRuc] = useState(\"\");\n    const [razonSocial, setRazonSocial] = useState(\"\")\n    const [solesDolars, setSolesDolars] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [totalSoles, setTotalSoles] = useState(0)\n    const [totalDolares, setTotalDolares] = useState(0)\n    const [valueDolar, setValueDolar] = useState(0)\n\n    const updateInput = (event) => {\n        const monto = parseFloat(event.target.value)\n        if (!isNaN(parseFloat(event.target.value))) {\n            const total = monto * 1.18\n            setTotalSoles(total)\n        }else{\n            const total = 0\n            setTotalSoles(total)\n        }\n            \n    };\n\n    const updateInput2 = (event) => {\n        const monto = parseFloat(event.target.value)\n        if (!isNaN(parseFloat(event.target.value))) {\n            const total = monto * 1.18 * parseFloat(valueDolar) \n            setTotalDolares(total)\n        }else{\n            const total = 0\n            setTotalDolares(total)\n        }\n    };\n\n    const getTypeDocument = async () => {\n        const result = await ShowTypeDocument()\n        setTypeDoc(result.data)\n    }\n\n    const getTypeRecipe = async () => {\n        const result = await ShowTypeRecipe()\n        setTypeRecipe(result.data)\n    }\n\n    const getMyChangeDolar = async () => {\n        const result = await ChangeDolar()\n        setValueDolar(result.data.venta);\n    }\n\n    const getSupplier = async (ruc) => {\n        const result = await getRuc(ruc)\n        if (result.data) {\n            setRazonSocial(result.data.razonSocial)\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let data = {}\n        switch (solesDolars) {\n            case \"soles\":\n                data = {\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base:       parseFloat(event.target.tax_base.value),\n                    tb_igv:         parseFloat(event.target.tb_igv.value),\n                    tb_total:       parseFloat(event.target.tb_total.value),\n                    business_name:  razonSocial,\n                    tax_base_dolar: null,\n                    change_type:    null,\n                    tb_igv_dolar:   null,\n                    tb_total_dolar: null,\n                }\n                break;\n            case \"dolares\":\n                data = {\n                    month:          event.target.month[0].value,\n                    year:           event.target.year[0].value,\n                    date:           event.target.date.value,\n                    document:       event.target.document.value,\n                    serie:          event.target.serie.value,\n                    number:         parseFloat(event.target.number.value),\n                    recipe:         event.target.recipe.value,\n                    ruc:            parseFloat(event.target.ruc.value),\n                    tax_base_dolar: parseFloat(event.target.tax_base_dolar.value),\n                    change_type:    parseFloat(event.target.change_type.value),\n                    tb_igv_dolar:   parseFloat(event.target.tb_igv_dolar.value),\n                    tb_total_dolar: parseFloat(event.target.tb_total_dolar.value),\n                    business_name:  razonSocial,\n                    tax_base:       null,\n                    tb_igv:         null,\n                    tb_total:       null,\n                }\n                break;\n            default:\n                setError(true)\n                break;\n        }\n        const result = await CreateSale(data)\n        if (result.statusText === \"OK\") {\n            props.history.push(\"/ventas\")\n        } else {\n            setError(true)\n        }\n        console.log(result);\n    }\n\n    useEffect(() => {\n        getSupplier(ruc)\n    }, [ruc])\n\n    useEffect(() => {\n        getTypeDocument()\n    }, [])\n\n    useEffect(() => {\n        getTypeRecipe()\n    }, [])\n\n    useEffect(() => {\n        getMyChangeDolar()\n    }, [])\n\n    return (\n        <div className=\"container-page\">\n            <h1>Agregar Venta</h1>\n            <form className=\"form-add-venta\" onSubmit={onSubmit} >\n                <div className=\"form-1-add-venta\">\n                    <label htmlFor=\"mes_registro\">\n                        MES DE REGISTRO:&nbsp;\n                        <select name=\"month\" id=\"mes_registro\">\n                            <option value=\"\">------------</option>\n                            <option value=\"Enero\">Enero</option>\n                            <option value=\"Febrero\">Febrero</option>\n                            <option value=\"Marzo\">Marzo</option>\n                            <option value=\"Abril\">Abril</option>\n                            <option value=\"Mayo\">Mayo</option>\n                            <option value=\"Junio\">Junio</option>\n                            <option value=\"Julio\">Julio</option>\n                            <option value=\"Agosto\">Agosto</option>\n                            <option value=\"Setiembre\">Setiembre</option>\n                            <option value=\"Octubre\">Octubre</option>\n                            <option value=\"Noviembre\">Noviembre</option>\n                            <option value=\"Diciembre\">Diciembre</option>\n                        </select>\n                    </label>\n                    <label htmlFor=\"year\">\n                        AÑO DE REGISTRO:&nbsp;\n                        <input \n                            type=\"number\" \n                            name=\"year\" \n                            id=\"year\" \n                            placeholder={new Date().getFullYear()} \n                        />\n                    </label>\n                </div>\n\n                <p>COMPROBANTE DE PAGO O DOCUMENTO:</p>\n\n                <div className=\"form-2-add-venta\">\n                    <label htmlFor=\"fecha_emision\">\n                        FECHA DE EMISION: &nbsp;\n                        <DatePicker\n                            id=\"fecha_emision\"\n                            className=\"fecha_emision\"\n                            onChange={setValue}\n                            name=\"date\"\n                            value={value}\n                        />\n                    </label>\n                    <label htmlFor=\"document\">\n                        TIPO DE DOCUMENTO:&nbsp;\n                        <select name=\"document\" id=\"document\">\n                            <option value=\"\">------------------</option>\n                            {typeDoc.map((t) => <option key={t.id} value={t.document}>{t.document}</option>)}\n                        </select>\n                    </label>\n                    <label htmlFor=\"serie\">\n                        SERIE:&nbsp;\n                        <input type=\"text\" name=\"serie\" id=\"serie\" />\n                    </label>\n                    <label htmlFor=\"number\">\n                        NÚMERO:&nbsp;\n                        <input type=\"number\" name=\"number\" id=\"number\" />\n                    </label>\n                    <label htmlFor=\"recipe\">\n                        TIPO:&nbsp;\n                        <select name=\"recipe\" id=\"recipe\">\n                            <option value=\"\">------------------</option>\n                            {typeRecipe.map((t) => <option key={t.id} value={t.recipe}>{t.recipe}</option>)}\n                        </select>\n                    </label>\n                    <label htmlFor=\"ruc\">\n                        RUC DEL PROVEEDOR:&nbsp;\n                        <input \n                            type=\"number\" \n                            name=\"ruc\" \n                            id=\"ruc\" \n                            min=\"0\"\n                            max=\"777777777777\"\n                            onChange={(event) => setRuc(event.target.value)}\n                        />\n                    </label>\n                    <label htmlFor=\"razon_social\">\n                        NOMBRE O RAZÓN SOCIAL:&nbsp;\n                        <input \n                            type=\"text\" \n                            name=\"business_name\"\n                            className=\"razon-social-form\"\n                            value={razonSocial}\n                            disabled={\"true\"}\n                        />\n                    </label>\n                </div>\n\n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"1\" \n                        value=\"1\" \n                        onChange={() => setSolesDolars(\"soles\")}\n                    />&nbsp;\n                    IMPONIBLE EN SOLES \n                </p>\n                \n                <p>\n                    <input \n                        type=\"radio\" \n                        name=\"imponible\" \n                        id=\"2\" \n                        value=\"2\" \n                        onChange={() => setSolesDolars(\"dolares\")}\n                    />&nbsp;\n                    IMPONIBLE EN DOLARES: \n                </p>\n\n                {solesDolars === \"soles\" &&\n                    <div className=\"form-3-add-venta\">\n                        <label htmlFor=\"tax_base\">\n                            BASE IMPONIBLE (en soles):&nbsp;\n                            <input type=\"number\" name=\"tax_base\" id=\"tax_base\" step=\"0.001\" onChange={updateInput} />\n                        </label>\n                        <label htmlFor=\"tb_igv\">\n                            IGV:&nbsp;\n                            <input type=\"number\" name=\"tb_igv\" id=\"tb_igv\" step=\"0.01\" value=\"0.18\" disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total\">\n                            TOTAL:&nbsp;\n                            <input type=\"number\" name=\"tb_total\" id=\"tb_total\" onChange={updateInput} value={totalSoles} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n                \n                {solesDolars === \"dolares\" &&\n                    <div className=\"form-4-add-venta\">\n                        <label htmlFor=\"tax_base_dolar\">\n                            BASE IMPONIBLE (en dolares):&nbsp;\n                            <input type=\"number\" name=\"tax_base_dolar\" id=\"tax_base_dolar\" onChange={updateInput2} />\n                        </label>\n                        <label htmlFor=\"change_type\">\n                            TIPO DE CAMBIO:&nbsp;\n                            <input type=\"number\" name=\"change_type\" id=\"change_type\" value={valueDolar} disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_igv_dolar\">\n                            IGV:&nbsp;\n                            <input type=\"number\" name=\"tb_igv_dolar\" id=\"tb_igv_dolar\" value=\"0.18\" disabled={\"true\"} />\n                        </label>\n                        <label htmlFor=\"tb_total_dolar\">\n                            TOTAL:&nbsp;\n                            <input type=\"number\" name=\"tb_total_dolar\" id=\"tb_total_dolar\" onChange={updateInput2} value={totalDolares} disabled={\"true\"} />\n                        </label>\n                    </div>\n                }\n\n                {error &&\n                    <p className=\"error\">Completar todos los campos correctamente</p>\n                }\n                <button type=\"submit\">Agregar venta</button>\n            </form>\n        </div>\n    )\n}\n\nexport default VentasAdd\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from '../layout/Layout'\nimport CompraDetail from '../pages/CompraDetail'\nimport Compras from '../pages/Compras'\nimport ComprasAdd from '../pages/ComprasAdd'\nimport Home from '../pages/Home'\nimport NotFound from '../pages/NotFound'\nimport UnidadesCompra from '../pages/UnidadesCompra'\nimport UnidadesCompraDetail from '../pages/UnidadesCompraDetail'\nimport UnidadesVenta from '../pages/UnidadesVenta'\nimport Ventas from '../pages/Ventas'\nimport VentasAdd from '../pages/VentasAdd'\n\nexport const DashboardRoutes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route exact path=\"/\" component={ Home }/>\n                <Route exact path=\"/ventas\" component={ Ventas }/>\n                <Route exact path=\"/ventas/add\" component={ VentasAdd }/>\n                <Route exact path=\"/ventas/unities/all\" component={ UnidadesVenta }/>\n                <Route exact path=\"/compras\" component={ Compras }/>\n                <Route exact path=\"/compras/add\" component={ ComprasAdd }/>\n                <Route exact path=\"/compras/unities/all\" component={ UnidadesCompra }/>\n                <Route exact path=\"/compras/detail/:id\" component={ CompraDetail }/>\n                <Route exact path=\"/compras/unities/detail/:id\" component={ UnidadesCompraDetail }/>\n                <Route component={NotFound} />\n            </Switch>\n        </Layout>\n    )\n}\n","import React, { useReducer } from 'react'\nimport { createBrowserHistory } from 'history';\nimport { AuthContext } from '../auth/AuthContext'\nimport reducer from '../reducers'\nimport { BrowserRouter, Router, Switch } from 'react-router-dom';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport Login from '../pages/Login';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { parseJwt } from '../helpers/decodeJWT';\n\nconst history = createBrowserHistory();\n\nconst init = () => {\n  let myUser;\n  const myToken  = sessionStorage.getItem(\"crdt\");\n  if (myToken === null) {\n    myUser = {\n      logged: false\n    }\n  }else{\n    const myPayload = parseJwt(myToken)\n    myUser = {\n      id: myPayload.user_id,\n      email: myPayload.email,\n      first_name: myPayload.first_name,\n      last_name: myPayload.last_name,\n      logged: true,\n    }\n  }\n  return myUser;\n}\n\nconst App = () => {\n\n  const [user, dispatch] = useReducer(reducer, {}, init)\n\n  return (\n    <AuthContext.Provider value={{ user, dispatch }}>\n      <BrowserRouter>\n        <Router history={history}>\n            <Switch>\n              <PublicRoute\n                exact \n                path=\"/login\" \n                component={Login} \n                isAuthenticated={ user.logged }\n              />\n              <PrivateRoute\n                path=\"/\" \n                component={DashboardRoutes} \n                isAuthenticated={ user.logged }\n              />             \n            </Switch>\n        </Router>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\nimport './index.css';\nimport App from './routes/App';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst preloadedState = window.__PRELOADED_STATE__;\nconst store = createStore(reducer, preloadedState, composeEnhancers(applyMiddleware(thunk)));\n\ndelete window.__PRELOADED_STATE__;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}